{
  "hash": "75d00a6a8d7fe75f3a0ebf22a0725e84",
  "result": {
    "markdown": "---\ntitle: \"Modification des outputs avec un fichier .scss\"\n\n# toc-title: \"\"\n# subtitle: \"\"\n\ncategories:\n  - Output\n  - scss\n  - sass\n  - css\n  \nauthor: \n  - name: \"Marc Thévenin\"\n    affiliations:\n      - name: \"Ined\"\n\ndate: 06/20/2023\n\nimage: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Sass_Logo_Color.svg/1200px-Sass_Logo_Color.svg.png\"\n\nformat: \n  html: default\n#  docx: default\n#  pdf:  default\n\nfilters:\n   - lightbox\n   - nutshell\nlightbox: auto\n\nabstract: | \n A la suite d'un code, les outputs de Quarto (idem Rmarkdown) épouse le thème de la page. Il est possible de modifier leur couleur d'affichage à l'aide des variable sass et d'un code css ajoutés à un fichier .scss \n---\n\n\nPar défaut le rendu des outputs bruts (`theme: default`) \n\n![](img/img1.png)\n\n- Avec un fichier .scss, généré automatiquement à la création d'un projet, on peu modifier le rendu de l'output. \n- On peut créer un fichier .scss facilement à partir d'un fichier de type texte, en le renommant avec l'extension `.scss`, par exemple `styles.scss`.\n- On ajoute les éléments suivants au fichier .scss\n- On indique dans le yaml de la page ou le _quarto.yml du projet qu'on applique les modifications ajoutées au fichier.  \n\n**Modifications des couleurs de l'output dans le fichier .scss** \n\n```markdown\n$code-block-stdoutcolor: #37424a;\n$code-block-stdoutcolor-light: rgba($code-block-stdoutcolor, 0.5);\n$code-block-stdoutcolor-lighter: rgba($code-block-stdoutcolor, 0.1);\n\n/*-- scss:rules --*/\n\n.cell-output-display pre, .cell-output-stdout pre {\n    background-color: $code-block-stdoutcolor-lighter !important;\n    border: 1.5px solid $code-block-stdoutcolor-light;\n    border-radius: .25rem;\n    border-left: 4px;\n    border-left-style: solid;\n    border-left-color: $code-block-stdoutcolor;\n    padding: .4em;\n    color: #37424a\n}\n\n\n.cell-output pre code {\n    background-color: transparent;\n}\n\n```\n\n**yaml de la page ou du projet**  \n\n\nPour le yaml d'une page avec un fichier styles.scss\n\n```markdown\n---\n\ntitle=\"Changement couleur output\"\n\nformat:\n  html:\n    theme: [default, style.scss]\n---\n```\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm(Sepal.Length~Petal.Length, data=iris))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Sepal.Length ~ Petal.Length, data = iris)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.24675 -0.29657 -0.01515  0.27676  1.00269 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   4.30660    0.07839   54.94   <2e-16 ***\nPetal.Length  0.40892    0.01889   21.65   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4071 on 148 degrees of freedom\nMultiple R-squared:   0.76,\tAdjusted R-squared:  0.7583 \nF-statistic: 468.6 on 1 and 148 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\nOn peut modifier la couleur (ici un gris:`#37424a`), l'épaisseur du contour (plus large à gauche), le radius des angles du contoure etc...\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}