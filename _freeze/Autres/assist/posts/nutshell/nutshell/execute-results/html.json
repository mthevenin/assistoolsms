{
  "hash": "a106299b77f913336cd5ff9a11872812",
  "result": {
    "markdown": "---\ntitle: \"Nutshell [A supprimer]\"\nauthor: \"Marc Thévenin\"\ndate: 05/10/2023\n\nimage: \"https://static.vecteezy.com/system/resources/previews/000/301/046/original/a-girl-in-a-nutshell-vector.jpg\"\n\ncategories:\n  - extension\n\ntoc-title: \"**Sommaire**\"\n\nformat:\n  html: \n    grid:\n      sidebar-width: 10px\n      body-width: 1200px\n      margin-width: 500px\n      gutter-width: 2.5rem       \n    page-layout: full\n\nreference-location: margin\ncitation-location: margin\n\nfilters:\n   - lightbox\n   - nutshell\n---\n\n\n::: callout-note\n\nIntéressant pour affichage contenu externe, sinon avec une TOC, c'est bofbof.\nPeut-être ajouté une courte bulle à la toc, sans affichage dans le corps du document.\n\n:::\n\n\n# Quesako\n\nPermet d'ajouter un contenu qui s'affiche sous forme d'une bulle..... Cela peut-être un contenu rédigé dans le corps du document ou issu d'un lien, en particulier sur un contenu présent dans le support mais dans une autre page.\nCe n'est pas parfaitement concluant:  \n\n- Si bloc de programme avec un lien externe, ilf faut modifié le . js\n- Les bulles internes au document étant créée avec un titre de section, cela s'affiche dans la Toc, visiblement même avec l'option invisible (j'en suis là actuellement.  Peut-être réservé à de l'affichage de contenu externe. Extension donc très optionnelle dans son intérêt. \n\n\nPour la première section affiche le code, la bulle directement liée au titre de la section (avec `:Explication (dans titre section)`)\n\nInstallation: dans le terminal => `quarto install extension schochastics/quarto-nutshell`\n\n[Lien dépôt github](https://github.com/schochastics/quarto-nutshell)\n\n\n## :Explication (dans titre section)\n\n<https://github.com/schochastics/quarto-nutshell>\nNutshell is a tool to make \"expandable explanations\", like this! This lets your readers learn only the details they need, just-in-time, always-in-context.\n\nUnlike links, Nutshell lets you include only the snippet you need, not the whole page. Plus, instead of being lost in a jungle of new tabs, your reader stays on one page, keeping their flow of reading. Even if you interrupt a sentence, Nutshell recaps the sentence afterwards, so your reader never loses context.   \n\n\nYou can find more information on the nutshell [webpage](https://ncase.me/nutshell/) \n\n- [:link to wikipedia Posit](https://fr.wikipedia.org/wiki/Posit_Software,_PBC)\n\n# Lien externe\n\n::: callout-important\n\nQuelques défauts: couleur du texte de la zône de texte si inclusion externe, elle est de la même couleur que le fond du bloc. Du coup\ndifficile, de lire directement le programme, il faut passer dessus avec la souris. Problème, tout ça est en javascript.  \nJ'ai trouvé la solution en modifiant le fichier **nutshell.min.js** à la main. Normalement on devrait pouvoir ajouté une css externe, mais cela ne fonctionne pas chez moi (l'extension est une adaptation pas formcément prévue pour fonctionné avec Quarto).   \n\nAjouter la css suivante (au bon endroit, pour moi après la css .nutshell-bubble blockquote): \n\n\n::: {.cell}\n\n```{.r .cell-code}\n.nutshell-bubble  code span {color: black; \\n} \\n\n```\n:::\n\n\nJ'ai fait une copie du fichier modifié (en racine du projet: **nutshell.min.js**), il suffit d'écraser le .js après installation de l'extension avec celui-ci (répertoire extension).\n\n:::\n\nOn récupère le lien (temporaire actuellement car il est en local) en cliquant sur la coquille de noix à droite du titre de section\n\n```{}\nhttps://juba.github.io/tidyverse/08-ggplot2.html#initialisation\n```\n\nOn insère le lien dans l'appel.\n\n```{}\n- [:lien vers la section désirée](https://juba.github.io/tidyverse/08-ggplot2.html#initialisation)\n```\n\n- [:lien document externe](https://juba.github.io/tidyverse/08-ggplot2.html#initialisation)  \n\nLe lien peut renvoyer à une autre page du support.\n\n\n# Ajout d'une bulle interne\n\nAvec une toc dans la page, ce n'est pas top, le titre de la section \"caché\" apparait en sous section. Pas convaincu.\n\n[:link to invisible sections](#x-invisible)\n\n## :x invisible\n\nUse `## :x header` to include an invisible section that can be linked to via nutshell \n\n\n::: {.cell}\n\n```{.r .cell-code}\n[:link to invisible sections](#x-invisible)\n\n## :x invisible\n\nUse `## :x header` to include an invisible section that can be linked to via nutshell \n```\n:::\n\n\n\n## :x exemple\nBlablabla blabla.  \n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}