{
  "hash": "40b1d4141f99411ec15021f0f9baeb82",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Pondérations normalisées avec R\"\n\n# subtitle: \"\"\n\ncategories:\n  - Pondération\n  \nauthor: \n  - name: \"Elodie Baril\"\n    affiliations:\n      - name: \"Ined\"\n\ndate: 06/29/2023\n\nimage: \"https://www.r-project.org/Rlogo.png\"\n\nformat: \n  html: default\n  docx: default\n#  pdf:  default\n\n#filters:\n#  - lightbox\n#lightbox: auto\n\n#code-annotations: below\n\nabstract: | \n L'utilisation des poids normalisés sur la taille de l'échantillon s'avère obligatoire pour certaines analyses, en particulier pour obtenir des estimations robustes de la variance. La présente fiche présente avec les packages `questionr` et `survey`, deux manières d'introduire ces poids dans des analyses.\n---\n\n\n\n\n| Package       | Fonction                                        |\n|---------------|-------------------------------------------------|\n| **questionr** | `wtd.table` - `cprop` - `lprop`                 |\n| **survey**    | `svydesign` - `svytable` - `svymean` - `svyglm` |\n| **Base R**    | `mean`                                          |\n\n: **Fonctions utilisées dans la fiche**\n\n\nDocumentation sur les packages:  \n\n\n- <https://juba.github.io/questionr/>\n- <https://www.rdocumentation.org/packages/survey/versions/4.1-1>\n\nActivation des packages et ouverture de la table d'exemple HDV\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(questionr)\n#install.packages(survey)\n\nlibrary(questionr)\nlibrary(survey)\n\n#Utilisation de la table d'exemple Histoire de vie (hdv2003) \ndata(\"hdv2003\")\n\n# Extrait du fichier\nhdv2003[1:5,1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  id age  sexe                                              nivetud    poids\n1  1  28 Femme Enseignement superieur y compris technique superieur 2634.398\n2  2  23 Femme                                                 <NA> 9738.396\n3  3  59 Homme                    Derniere annee d'etudes primaires 3994.102\n4  4  34 Homme Enseignement superieur y compris technique superieur 5731.662\n5  5  71 Femme                    Derniere annee d'etudes primaires 4329.094\n```\n\n\n:::\n:::\n\n\n\nLa variable pondérée du fichier s'appelle **poids**\n\n\n# Package questionr\n\nLe package `questionr` permet d'obtenir rapidement des tableaux de fréquences ou de pourcentages avec des poids normalisés. L'opération de normalisation est passée directement dans une option.\n\n\n## Fréquences pondérées  \n\n*  Fonction **`wtd.table()`**\n\n\n\n::: {.cell filename='fréquences sans pondération'}\n\n```{.r .cell-code}\ntable(hdv2003$sexe)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nHomme Femme \n  899  1101 \n```\n\n\n:::\n:::\n\n::: {.cell filename='fréquences avec pondérations'}\n\n```{.r .cell-code}\n# tris à plat avec l'option weights\nwtd.table(hdv2003$sexe, weights = hdv2003$poids)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Homme   Femme \n5149382 5921844 \n```\n\n\n:::\n\n```{.r .cell-code}\n#  tris croisé\nwtd.table(hdv2003$qualif,hdv2003$sexe,weights=hdv2003$poids)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                             Homme     Femme\nOuvrier specialise        532365.8  479015.0\nOuvrier qualifie         1163988.6  296252.0\nTechnicien                378956.7  115658.0\nProfession intermediaire  438737.8  375560.7\nCadre                     779354.9  623574.6\nEmploye                   525068.8 2591911.0\nAutre                     129695.9  145912.6\n```\n\n\n:::\n:::\n\n\n\n\n\n**Pour normaliser la pondération on ajoute l'option `normwt=TRUE`**.  \n\n\n\n::: {.cell filename='fréquences avec pondérations normalisées'}\n\n```{.r .cell-code}\nwtd.table(hdv2003$sexe,weights=hdv2003$poids, normwt=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Homme    Femme \n 930.228 1069.772 \n```\n\n\n:::\n:::\n\n::: {.cell filename='tri croisé avec pondérations normalisées'}\n\n```{.r .cell-code}\nwtd.table(hdv2003$qualif,hdv2003$sexe,weights=hdv2003$poids, normwt=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                             Homme     Femme\nOuvrier specialise        96.17106  86.53332\nOuvrier qualifie         210.27275  53.51747\nTechnicien                68.45794  20.89344\nProfession intermediaire  79.25731  67.84446\nCadre                    140.78927 112.64780\nEmploye                   94.85286 468.22473\nAutre                     23.42937  26.35888\n```\n\n\n:::\n:::\n\n\n\n\n##  Pourcentages pondérés\n\n\n\n\n::: {.cell filename='Stocker le resultat des fréquences pondérées dans un objet, ici res'}\n\n```{.r .cell-code}\nres=wtd.table(hdv2003$qualif,hdv2003$sexe, weights=hdv2003$poids, normwt=TRUE)\n```\n:::\n\n\n\n* On utilise les fonctions `cprop()` et `lprop`:\n  * cprop(): pourcentages colonnes\n  * lprop(): pourcentages lignes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncprop(res) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                         Homme Femme Ensemble\nOuvrier specialise        13.5  10.4  11.8   \nOuvrier qualifie          29.5   6.4  17.0   \nTechnicien                 9.6   2.5   5.8   \nProfession intermediaire  11.1   8.1   9.5   \nCadre                     19.7  13.5  16.4   \nEmploye                   13.3  56.0  36.3   \nAutre                      3.3   3.2   3.2   \nTotal                    100.0 100.0 100.0   \n```\n\n\n:::\n\n```{.r .cell-code}\nlprop(res) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                         Homme Femme Total\nOuvrier specialise        52.6  47.4 100.0\nOuvrier qualifie          79.7  20.3 100.0\nTechnicien                76.6  23.4 100.0\nProfession intermediaire  53.9  46.1 100.0\nCadre                     55.6  44.4 100.0\nEmploye                   16.8  83.2 100.0\nAutre                     47.1  52.9 100.0\nEnsemble                  46.0  54.0 100.0\n```\n\n\n:::\n:::\n\n\n\n\n# Le package `survey`\n\n* Plus riche, le package **`survey`** permet d'appliquer la pondération, normalisée ou non, à un ensemble plus vaster de fonction. \n* Pour les modèles, l'application de la pondération normalisée (**obligatoire**) permet d'obtenir une estimation robuste de la variance des paramètres.\n* La normalisation de la pondération se fait par la création d'une nouvelle variable.  \n\n## Création de la variable de pondération normalisée\n\nOn divise tout simplement chaque poids individuel par la moyenne des poids (fonction `mean()`)\n\n\n\n::: {.cell filename='creation d\\'une variable de pondération normalisée'}\n\n```{.r .cell-code}\nhdv2003$poids_norm=hdv2003$poids/mean(hdv2003$poids)\n```\n:::\n\n\n\nComme la normalisation se fait sur la taille de l'échantillon, la somme des poids normalisés est bien égale à l'effectif de celui-ci\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(hdv2003$poids_norm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2000\n```\n\n\n:::\n:::\n\n\n\n## Design de l'échantillon\n\n* On est ici dans la situation la plus simple simple, le design se réduisant à l'application d'un poids d'échantillonage. \n* Avant d'utiliser la fonction d'analyse on générère un objet renseignant les divers éléments entrant dans le design de l'enquête (ici seulement la variable *hdv2003$poids_norm*) avec la fonction **`svydesign`**\n\n\n\n::: {.cell filename='Fonction svydesign'}\n\n```{.r .cell-code}\ndfw <- svydesign(ids = ~1, data = hdv2003, weights = ~ hdv2003$poids)\n```\n:::\n\n\n\n\n## Application du design à des fonctions analytiques\n\n* On ajoute aux fonctions l'objet généré avec  `svydesign` (ici **dfw**)\n\n**Tableaux de fréquence**\n\n* Fonction **`svytable`**\n\n\n\n::: {.cell filename='fréquences pondérées'}\n\n```{.r .cell-code}\nsvytable(~sexe, dfw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsexe\n  Homme   Femme \n5149382 5921844 \n```\n\n\n:::\n\n```{.r .cell-code}\nsvytable(~ sexe + qualif, dfw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       qualif\nsexe    Ouvrier specialise Ouvrier qualifie Technicien Profession intermediaire\n  Homme           532365.8        1163988.6   378956.7                 438737.8\n  Femme           479015.0         296252.0   115658.0                 375560.7\n       qualif\nsexe        Cadre   Employe     Autre\n  Homme  779354.9  525068.8  129695.9\n  Femme  623574.6 2591911.0  145912.6\n```\n\n\n:::\n:::\n\n::: {.cell filename='Pourcentages pondérés'}\n\n```{.r .cell-code}\ntab <- svytable(~ sexe + qualif, dfw)\n```\n:::\n\n::: {.cell filename='Pourcentages pondérés'}\n\n```{.r .cell-code}\nlprop(tab)  # % ligne pondérée\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          qualif\nsexe       Ouvrier specialise Ouvrier qualifie Technicien\n  Homme     13.5               29.5              9.6     \n  Femme     10.4                6.4              2.5     \n  Ensemble  11.8               17.0              5.8     \n          qualif\nsexe       Profession intermediaire Cadre Employe Autre Total\n  Homme     11.1                     19.7  13.3     3.3 100.0\n  Femme      8.1                     13.5  56.0     3.2 100.0\n  Ensemble   9.5                     16.4  36.3     3.2 100.0\n```\n\n\n:::\n\n```{.r .cell-code}\ncprop(tab)  # % colonne pondérée\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       qualif\nsexe    Ouvrier specialise Ouvrier qualifie Technicien Profession intermediaire\n  Homme  52.6               79.7             76.6       53.9                   \n  Femme  47.4               20.3             23.4       46.1                   \n  Total 100.0              100.0            100.0      100.0                   \n       qualif\nsexe    Cadre Employe Autre Ensemble\n  Homme  55.6  16.8    47.1  46.0   \n  Femme  44.4  83.2    52.9  54.0   \n  Total 100.0 100.0   100.0 100.0   \n```\n\n\n:::\n:::\n\n\n\n\n**Moyenne pondérée**\n\n* Fonction `svymean` et `svyby`\n\n\n\n::: {.cell filename='Moyenne pondérée'}\n\n```{.r .cell-code}\nsvymean(~age, dfw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      mean     SE\nage 46.347 0.5284\n```\n\n\n:::\n:::\n\n\n\n* Si on souhaite calculer une moyenne par sous groupe, on utilise la fonction `svyby` à laquelle on ajoute l'argument `svymean` en option\n\n\n\n::: {.cell filename='Moyennes pondérées par groupe'}\n\n```{.r .cell-code}\nsvyby(~age, ~sexe, dfw, svymean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       sexe      age        se\nHomme Homme 45.20200 0.7419450\nFemme Femme 47.34313 0.7420836\n```\n\n\n:::\n:::\n\n\n\n* Modèle logistique avec `svyglm`\n\n\n\n::: {.cell filename='Moyennes pondérées par groupe'}\n\n```{.r .cell-code}\noptions(show.signif.stars=FALSE)\nsummary(svyglm(cuisine ~ age + sexe + occup + qualif, dfw, family=binomial))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in eval(family$initialize): nombre de succès non entier dans un glm\nbinomial !\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nsvyglm(formula = cuisine ~ age + sexe + occup + qualif, design = dfw, \n    family = binomial)\n\nSurvey design:\nsvydesign(ids = ~1, data = hdv2003, weights = ~hdv2003$poids)\n\nCoefficients:\n                                Estimate Std. Error t value Pr(>|t|)\n(Intercept)                    -0.151065   0.324985  -0.465    0.642\nage                            -0.012303   0.006407  -1.920    0.055\nsexeFemme                       0.922651   0.160463   5.750 1.06e-08\noccupChomeur                    0.344982   0.255175   1.352    0.177\noccupEtudiant, eleve           -0.677345   1.124417  -0.602    0.547\noccupRetraite                  -0.256705   0.242383  -1.059    0.290\noccupRetire des affaires        0.633727   1.100048   0.576    0.565\noccupAu foyer                   0.249697   0.286245   0.872    0.383\noccupAutre inactif             -0.231741   0.382382  -0.606    0.545\nqualifOuvrier qualifie          0.134447   0.252713   0.532    0.595\nqualifTechnicien               -0.395892   0.357399  -1.108    0.268\nqualifProfession intermediaire  0.220994   0.293482   0.753    0.452\nqualifCadre                    -0.265439   0.256451  -1.035    0.301\nqualifEmploye                   0.018206   0.222582   0.082    0.935\nqualifAutre                    -0.510097   0.401470  -1.271    0.204\n\n(Dispersion parameter for binomial family taken to be 0.9331289)\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\n\nVous pouvez retrouver dans la documentation l'ensemble des fonctions prises en charge.\n\n\n\n\n\n",
    "supporting": [
      "weight_norm_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}