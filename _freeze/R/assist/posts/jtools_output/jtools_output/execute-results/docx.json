{
  "hash": "9189c7f4e13c0a29b84d71a4d7de8a73",
  "result": {
    "markdown": "---\ntitle: \"Affichage d'output de régression avec Jtools\"\n\n# subtitle: \"\"\n\ncategories:\n  - jtools\n  - output\n  \nauthor: \n  - name: \"Marc Thévenin\"\n    affiliations:\n      - name: \"Ined\"\n\ndate: 06/21/2023\n\nimage: \"https://jtools.jacob-long.com/logo.png\"\n\nformat: \n  html: default\n  docx: default\n#  pdf:  default\n\n#filters:\n#   - lightbox\n#lightbox: auto\n\ncode-annotations: below\n\nabstract: | \n La fonction `summ` du package jtools (Jacob Long) permet d'obtenir des outputs de regression en format console de très bonne qualité. Il s'agit d'une très bonne alternative aux outputs par défaut. Ce package propose également des fonctionnalités d'exportation des outputs dans d'autres formats (html, docx, pdf ...) et des visualisations sous forme de graphique. Ces fonctionnalité ne seront pas traitées ici, l'accent étant mis sur la qualité d'un output console avec une durée d'exécution minimale. L'utilisation des fonctionnalités d'exportation, comme le très populaire package **`gtsummaty`** devrait être appliqué, selon nous, pour des raisons de durée d'exécution à un résultat final.\n---\n\n\n\n- [Documentation sur le package **jtools** (Jacob Long)](https://jtools.jacob-long.com/index.html)\n- A ce jour, la maintenance du package est assurée [version 2.2.1 à juin 2023] \n- Les nombre de modèles pris en charge par le package est malheureusement assez réduit. On notera cependant la prise en charge de la fonction `svyglm` du package survey. \n- Les fonctionnalités d'exportation ne seront pas traitées ici. \n\n# **Installation**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"jtools\")\n```\n:::\n\n\n\nou \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"devtools\")\ndevtools::install_github(\"jacob-long/jtools\")\n```\n:::\n\n\n\n\n# **Syntaxe de la fonction `summ()`**  \n\nLa syntaxe est particulièrement simple, elle consiste juste à appliquée à la fonction `summ()` l'objet généré par la régression. Quelques options comme `digits`, `confint`, `exp` permettent d'améliorer et enrichir l'output.\n\n\n\n::: {.cell filename='syntaxe minimale'}\n\n```{.r .cell-code}\nfit = lm(y ~ x , data=df)\nsumm(fit)\n```\n:::\n\n\n\n\n# **Exemples [^1]**\n\n[^1]: mesure de la tension artérielle (`lm`) et du risque d'hypertension (`glm` et `svyglm`)\n\n\n## Avec la fonction `lm()`\n\n[Liste des options](https://jtools.jacob-long.com/reference/summ.lm.html)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jtools)\nlibrary(readr)\n\ndf =  read.csv(\"https://raw.githubusercontent.com/mthevenin/intro_logit/main/hypertension2.csv\")\n\nfit = lm(bpsystol ~ age + I(sex) + I(black) + I(region), data=df)\n\nsumm(fit, digits=4)  #<1>                                                       \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMODEL INFO:\nObservations: 10351\nDependent Variable: bpsystol\nType: OLS linear regression \n\nMODEL FIT:\nF(6,10344) = 552.2494, p = 0.0000\nR² = 0.2426\nAdj. R² = 0.2422 \n\nStandard errors: OLS\n---------------------------------------------------------------\n                              Est.     S.E.     t val.        p\n----------------------- ---------- -------- ---------- --------\n(Intercept)               102.2001   0.8979   113.8168   0.0000\nage                         0.6563   0.0116    56.5104   0.0000\nI(sex)Male                  4.0350   0.3999    10.0911   0.0000\nI(black)Not Black          -4.6494   0.6640    -7.0019   0.0000\nI(region)NE                 0.2570   0.5892     0.4362   0.6627\nI(region)S                 -0.7920   0.5450    -1.4532   0.1462\nI(region)W                 -0.5221   0.5543    -0.9420   0.3462\n---------------------------------------------------------------\n```\n:::\n:::\n\n\n\n\n1. digits=4 => Les résultats sont reportés avec 4 décimales      \n\n\n## Avec la fonction `glm()` [lien logit]\n\n[Liste des options](https://jtools.jacob-long.com/reference/summ.glm.html)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit = glm(highbp ~ age + I(sex) + I(black) + I(region), family=binomial, data=df)   \n\nsumm(fit, digits=4, confint=TRUE, exp=TRUE)                                           #<1>\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMODEL INFO:\nObservations: 10351\nDependent Variable: highbp\nType: Generalized linear model\n  Family: binomial \n  Link function: logit \n\nMODEL FIT:\nχ²(6) = 1623.1601, p = 0.0000\nPseudo-R² (Cragg-Uhler) = 0.1951\nPseudo-R² (McFadden) = 0.1151\nAIC = 12492.3709, BIC = 12543.0848 \n\nStandard errors: MLE\n-------------------------------------------------------------------------\n                          exp(Est.)     2.5%    97.5%     z val.        p\n----------------------- ----------- -------- -------- ---------- --------\n(Intercept)                  0.0853   0.0701   0.1038   -24.5720   0.0000\nage                          1.0496   1.0469   1.0524    36.1832   0.0000\nI(sex)Male                   1.5483   1.4223   1.6856    10.0890   0.0000\nI(black)Not Black            0.5860   0.5092   0.6742    -7.4663   0.0000\nI(region)NE                  1.1655   1.0287   1.3203     2.4051   0.0162\nI(region)S                   1.0024   0.8930   1.1253     0.0414   0.9669\nI(region)W                   1.0966   0.9746   1.2338     1.5322   0.1255\n-------------------------------------------------------------------------\n```\n:::\n:::\n\n\n\n1. On ajoute des intervalles de confiance (`confint=TRUE`) et le report des estimateurs sous forme d'Odds Ratio (`exp=TRUE`)\n\n\n\n## Avec la fonction `svyglm()` [lien logit]\n\n[Liste des options](https://jtools.jacob-long.com/reference/summ.svyglm.html)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survey)\n\nw = svydesign(id=~1, weights=~w, data=df)\n\nfit = svyglm(highbp ~ age + I(sex) + I(black) + I(region), family=binomial, design=w)\nsumm(fit, digits=4, confint=TRUE, exp=TRUE)    \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMODEL INFO:\nObservations: 10351\nDependent Variable: highbp\nType: Analysis of complex survey design \n Family: binomial \n Link function: logit \n\nMODEL FIT:\nPseudo-R² (Cragg-Uhler) = 0.1881\nPseudo-R² (McFadden) = 0.1125\nAIC = 12064.1922 \n\n-------------------------------------------------------------------------\n                          exp(Est.)     2.5%    97.5%     t val.        p\n----------------------- ----------- -------- -------- ---------- --------\n(Intercept)                  0.0692   0.0553   0.0865   -23.3763   0.0000\nage                          1.0530   1.0497   1.0562    33.0767   0.0000\nI(sex)Male                   1.8298   1.6529   2.0256    11.6459   0.0000\nI(black)Not Black            0.5849   0.4913   0.6964    -6.0259   0.0000\nI(region)NE                  1.1822   1.0245   1.3642     2.2906   0.0220\nI(region)S                   0.9961   0.8670   1.1445    -0.0549   0.9562\nI(region)W                   1.1225   0.9737   1.2940     1.5928   0.1112\n-------------------------------------------------------------------------\n\nEstimated dispersion parameter = 0.984 \n```\n:::\n:::\n",
    "supporting": [
      "jtools_output_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}