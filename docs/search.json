[
  {
    "objectID": "supports.html",
    "href": "supports.html",
    "title": "Autres supports de formation",
    "section": "",
    "text": "STATA\nANALYSE TEXTUELLE\nANALYSE DES DUREES"
  },
  {
    "objectID": "R/assist/posts/weight_norm/weight_norm.html",
    "href": "R/assist/posts/weight_norm/weight_norm.html",
    "title": "Pondérations normalisées avec R",
    "section": "",
    "text": "Fonctions utilisées dans la fiche\n\n\nPackage\nFonction\n\n\n\n\nquestionr\nwtd.table - cprop - lprop\n\n\nsurvey\nsvydesign - svytable - svymean - svyglm\n\n\nBase R\nmean\nDocumentation sur les packages:\nActivation des packages et ouverture de la table d’exemple HDV\n#install.packages(questionr)\n#install.packages(survey)\n\nlibrary(questionr)\nlibrary(survey)\n\n#Utilisation de la table d'exemple Histoire de vie (hdv2003) \ndata(\"hdv2003\")\n\n# Extrait du fichier\nhdv2003[1:5,1:5]\n\n  id age  sexe                                              nivetud    poids\n1  1  28 Femme Enseignement superieur y compris technique superieur 2634.398\n2  2  23 Femme                                                 &lt;NA&gt; 9738.396\n3  3  59 Homme                    Derniere annee d'etudes primaires 3994.102\n4  4  34 Homme Enseignement superieur y compris technique superieur 5731.662\n5  5  71 Femme                    Derniere annee d'etudes primaires 4329.094\nLa variable pondérée du fichier s’appelle poids"
  },
  {
    "objectID": "R/assist/posts/weight_norm/weight_norm.html#fréquences-pondérées",
    "href": "R/assist/posts/weight_norm/weight_norm.html#fréquences-pondérées",
    "title": "Pondérations normalisées avec R",
    "section": "Fréquences pondérées",
    "text": "Fréquences pondérées\n\nFonction wtd.table()\n\n\n\n\nfréquences sans pondération\n\ntable(hdv2003$sexe)\n\n\n\nHomme Femme \n  899  1101 \n\n\n\n\n\nfréquences avec pondérations\n\n# tris à plat avec l'option weights\nwtd.table(hdv2003$sexe, weights = hdv2003$poids)\n\n\n  Homme   Femme \n5149382 5921844 \n\n#  tris croisé\nwtd.table(hdv2003$qualif,hdv2003$sexe,weights=hdv2003$poids)\n\n                             Homme     Femme\nOuvrier specialise        532365.8  479015.0\nOuvrier qualifie         1163988.6  296252.0\nTechnicien                378956.7  115658.0\nProfession intermediaire  438737.8  375560.7\nCadre                     779354.9  623574.6\nEmploye                   525068.8 2591911.0\nAutre                     129695.9  145912.6\n\n\nPour normaliser la pondération on ajoute l’option normwt=TRUE.\n\n\n\nfréquences avec pondérations normalisées\n\nwtd.table(hdv2003$sexe,weights=hdv2003$poids, normwt=TRUE)\n\n\n   Homme    Femme \n 930.228 1069.772 \n\n\n\n\n\ntri croisé avec pondérations normalisées\n\nwtd.table(hdv2003$qualif,hdv2003$sexe,weights=hdv2003$poids, normwt=TRUE)\n\n\n                             Homme     Femme\nOuvrier specialise        96.17106  86.53332\nOuvrier qualifie         210.27275  53.51747\nTechnicien                68.45794  20.89344\nProfession intermediaire  79.25731  67.84446\nCadre                    140.78927 112.64780\nEmploye                   94.85286 468.22473\nAutre                     23.42937  26.35888"
  },
  {
    "objectID": "R/assist/posts/weight_norm/weight_norm.html#pourcentages-pondérés",
    "href": "R/assist/posts/weight_norm/weight_norm.html#pourcentages-pondérés",
    "title": "Pondérations normalisées avec R",
    "section": "Pourcentages pondérés",
    "text": "Pourcentages pondérés\n\n\n\nStocker le resultat des fréquences pondérées dans un objet, ici res\n\nres=wtd.table(hdv2003$qualif,hdv2003$sexe, weights=hdv2003$poids, normwt=TRUE)\n\n\n\nOn utilise les fonctions cprop() et lprop:\n\ncprop(): pourcentages colonnes\nlprop(): pourcentages lignes\n\n\n\ncprop(res) \n\n                         Homme Femme Ensemble\nOuvrier specialise        13.5  10.4  11.8   \nOuvrier qualifie          29.5   6.4  17.0   \nTechnicien                 9.6   2.5   5.8   \nProfession intermediaire  11.1   8.1   9.5   \nCadre                     19.7  13.5  16.4   \nEmploye                   13.3  56.0  36.3   \nAutre                      3.3   3.2   3.2   \nTotal                    100.0 100.0 100.0   \n\nlprop(res) \n\n                         Homme Femme Total\nOuvrier specialise        52.6  47.4 100.0\nOuvrier qualifie          79.7  20.3 100.0\nTechnicien                76.6  23.4 100.0\nProfession intermediaire  53.9  46.1 100.0\nCadre                     55.6  44.4 100.0\nEmploye                   16.8  83.2 100.0\nAutre                     47.1  52.9 100.0\nEnsemble                  46.0  54.0 100.0"
  },
  {
    "objectID": "R/assist/posts/weight_norm/weight_norm.html#création-de-la-variable-de-pondération-normalisée",
    "href": "R/assist/posts/weight_norm/weight_norm.html#création-de-la-variable-de-pondération-normalisée",
    "title": "Pondérations normalisées avec R",
    "section": "Création de la variable de pondération normalisée",
    "text": "Création de la variable de pondération normalisée\nOn divise tout simplement chaque poids individuel par la moyenne des poids (fonction mean())\n\n\n\ncreation d'une variable de pondération normalisée\n\nhdv2003$poids_norm=hdv2003$poids/mean(hdv2003$poids)\n\n\nComme la normalisation se fait sur la taille de l’échantillon, la somme des poids normalisés est bien égale à l’effectif de celui-ci\n\nsum(hdv2003$poids_norm)\n\n[1] 2000"
  },
  {
    "objectID": "R/assist/posts/weight_norm/weight_norm.html#design-de-léchantillon",
    "href": "R/assist/posts/weight_norm/weight_norm.html#design-de-léchantillon",
    "title": "Pondérations normalisées avec R",
    "section": "Design de l’échantillon",
    "text": "Design de l’échantillon\n\nOn est ici dans la situation la plus simple simple, le design se réduisant à l’application d’un poids d’échantillonage.\nAvant d’utiliser la fonction d’analyse on générère un objet renseignant les divers éléments entrant dans le design de l’enquête (ici seulement la variable hdv2003$poids_norm) avec la fonction svydesign\n\n\n\n\nFonction svydesign\n\ndfw &lt;- svydesign(ids = ~1, data = hdv2003, weights = ~ hdv2003$poids)"
  },
  {
    "objectID": "R/assist/posts/weight_norm/weight_norm.html#application-du-design-à-des-fonctions-analytiques",
    "href": "R/assist/posts/weight_norm/weight_norm.html#application-du-design-à-des-fonctions-analytiques",
    "title": "Pondérations normalisées avec R",
    "section": "Application du design à des fonctions analytiques",
    "text": "Application du design à des fonctions analytiques\n\nOn ajoute aux fonctions l’objet généré avec svydesign (ici dfw)\n\nTableaux de fréquence\n\nFonction svytable\n\n\n\n\nfréquences pondérées\n\nsvytable(~sexe, dfw)\n\n\nsexe\n  Homme   Femme \n5149382 5921844 \n\nsvytable(~ sexe + qualif, dfw)\n\n       qualif\nsexe    Ouvrier specialise Ouvrier qualifie Technicien Profession intermediaire\n  Homme           532365.8        1163988.6   378956.7                 438737.8\n  Femme           479015.0         296252.0   115658.0                 375560.7\n       qualif\nsexe        Cadre   Employe     Autre\n  Homme  779354.9  525068.8  129695.9\n  Femme  623574.6 2591911.0  145912.6\n\n\n\n\n\nPourcentages pondérés\n\ntab &lt;- svytable(~ sexe + qualif, dfw)\n\n\n\n\n\nPourcentages pondérés\n\nlprop(tab)  # % ligne pondérée\n\n\n          qualif\nsexe       Ouvrier specialise Ouvrier qualifie Technicien\n  Homme     13.5               29.5              9.6     \n  Femme     10.4                6.4              2.5     \n  Ensemble  11.8               17.0              5.8     \n          qualif\nsexe       Profession intermediaire Cadre Employe Autre Total\n  Homme     11.1                     19.7  13.3     3.3 100.0\n  Femme      8.1                     13.5  56.0     3.2 100.0\n  Ensemble   9.5                     16.4  36.3     3.2 100.0\n\ncprop(tab)  # % colonne pondérée\n\n       qualif\nsexe    Ouvrier specialise Ouvrier qualifie Technicien Profession intermediaire\n  Homme  52.6               79.7             76.6       53.9                   \n  Femme  47.4               20.3             23.4       46.1                   \n  Total 100.0              100.0            100.0      100.0                   \n       qualif\nsexe    Cadre Employe Autre Ensemble\n  Homme  55.6  16.8    47.1  46.0   \n  Femme  44.4  83.2    52.9  54.0   \n  Total 100.0 100.0   100.0 100.0   \n\n\nMoyenne pondérée\n\nFonction svymean et svyby\n\n\n\n\nMoyenne pondérée\n\nsvymean(~age, dfw)\n\n\n      mean     SE\nage 46.347 0.5284\n\n\n\nSi on souhaite calculer une moyenne par sous groupe, on utilise la fonction svyby à laquelle on ajoute l’argument svymean en option\n\n\n\n\nMoyennes pondérées par groupe\n\nsvyby(~age, ~sexe, dfw, svymean)\n\n\n       sexe      age        se\nHomme Homme 45.20200 0.7419450\nFemme Femme 47.34313 0.7420836\n\n\n\nModèle logistique avec svyglm\n\n\n\n\nMoyennes pondérées par groupe\n\noptions(show.signif.stars=FALSE)\nsummary(svyglm(cuisine ~ age + sexe + occup + qualif, dfw, family=binomial))\n\n\nWarning in eval(family$initialize): nombre de succès non entier dans un glm\nbinomial !\n\n\n\nCall:\nsvyglm(formula = cuisine ~ age + sexe + occup + qualif, design = dfw, \n    family = binomial)\n\nSurvey design:\nsvydesign(ids = ~1, data = hdv2003, weights = ~hdv2003$poids)\n\nCoefficients:\n                                Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)                    -0.151065   0.324985  -0.465    0.642\nage                            -0.012303   0.006407  -1.920    0.055\nsexeFemme                       0.922651   0.160463   5.750 1.06e-08\noccupChomeur                    0.344982   0.255175   1.352    0.177\noccupEtudiant, eleve           -0.677345   1.124417  -0.602    0.547\noccupRetraite                  -0.256705   0.242383  -1.059    0.290\noccupRetire des affaires        0.633727   1.100048   0.576    0.565\noccupAu foyer                   0.249697   0.286245   0.872    0.383\noccupAutre inactif             -0.231741   0.382382  -0.606    0.545\nqualifOuvrier qualifie          0.134447   0.252713   0.532    0.595\nqualifTechnicien               -0.395892   0.357399  -1.108    0.268\nqualifProfession intermediaire  0.220994   0.293482   0.753    0.452\nqualifCadre                    -0.265439   0.256451  -1.035    0.301\nqualifEmploye                   0.018206   0.222582   0.082    0.935\nqualifAutre                    -0.510097   0.401470  -1.271    0.204\n\n(Dispersion parameter for binomial family taken to be 0.9331289)\n\nNumber of Fisher Scoring iterations: 4\n\n\nVous pouvez retrouver dans la documentation l’ensemble des fonctions prises en charge."
  },
  {
    "objectID": "R/assist/posts/R_vscode/R_vscode_doc.html#première-ouverture-et-installation-des-extensions",
    "href": "R/assist/posts/R_vscode/R_vscode_doc.html#première-ouverture-et-installation-des-extensions",
    "title": "R avec VScode",
    "section": "Première ouverture et installation des extensions",
    "text": "Première ouverture et installation des extensions\n\n\n\n\n\nPremière ouverture\n\n\n\n \n\n\n\n\nExtensions R disponibles\n\n\n\n \n\n\n\n\nL’extension R\n\n\n\n\n\n\n\nL’extension Rtools"
  },
  {
    "objectID": "R/assist/posts/R_vscode/R_vscode_doc.html#résolution-du-conflit-entre-r-et-rtools",
    "href": "R/assist/posts/R_vscode/R_vscode_doc.html#résolution-du-conflit-entre-r-et-rtools",
    "title": "R avec VScode",
    "section": "Résolution du conflit entre R et Rtools",
    "text": "Résolution du conflit entre R et Rtools\n\n\n\n\n\nRechercher r.execute in terminal\n\n\n\n \n\n\n\n\nSuppression du conflit\n\n\n\n \n\n\n\n\nExécution de R"
  },
  {
    "objectID": "R/assist/posts/recodage_multiple/recodage_multiple.html",
    "href": "R/assist/posts/recodage_multiple/recodage_multiple.html",
    "title": "Recodage multiple",
    "section": "",
    "text": "Fonctions utilisées dans la fiche\n\n\n\n\n\n\nPackages\nFonctions\n\n\n\n\ndplyr\nmutate_all - mutate_if - mutate_at - ifelse - select\n\n\nBase R\nas.data.frame - for - grep - assign - get - paste\nIl existe plusieurs solutions pour automatiser un recodage dans R, nous allons aborder certaines d’entre-elles mais cette liste est loin d’être exhaustive."
  },
  {
    "objectID": "R/assist/posts/recodage_multiple/recodage_multiple.html#sur-lensemble-des-données",
    "href": "R/assist/posts/recodage_multiple/recodage_multiple.html#sur-lensemble-des-données",
    "title": "Recodage multiple",
    "section": "Sur l’ensemble des données",
    "text": "Sur l’ensemble des données\n\nExemple 1 : Changer l’ensemble des valeurs manquantes\n\n# Je fais un copie du jeu de donnée\ndf2 &lt;- df\n# Je remplace tous les NA par la valeurs 0\ndf2[is.na(df2)] &lt;- 0\ndf2\n\n   V1 V2 V3 V4 V5 V6 V7 V8 V9 V10\n1   8  0  8  5  8  5  5  8  6   1\n2   3  4  8  9  7  7  6  6  6   9\n3   6  4  4  9  8  1  5  3  2   0\n4   0  9  4  5  6  1  7  6  5  10\n5   1  5  1  3  7  5  6  5  1  10\n6   6  9  9  3  5  5 10  0  9   9\n7  10  6  8  9  9  0  0  4 10   9\n8   1  8  0  8  6  2  3  5  9   7\n9  10  4  3  6  2  2  7  0  6   9\n10  2  4  2  5  9  7  8  8  2   4\n\n\n\n\nExemple 2 : Remplacer une valeur par une autre\n\n# Je fais une copie de l'original\ndf2 &lt;- df\n# Je remplace tous les 10 par la valeur \"DIX\"\ndf2[df2==10] &lt;- \"DIX\"\ndf2\n\n     V1 V2 V3 V4 V5 V6   V7 V8  V9  V10\n1     8 NA  8  5  8  5    5  8   6    1\n2     3  4  8  9  7  7    6  6   6    9\n3     6  4  4  9  8  1    5  3   2 &lt;NA&gt;\n4  &lt;NA&gt;  9  4  5  6  1    7  6   5  DIX\n5     1  5  1  3  7  5    6  5   1  DIX\n6     6  9  9  3  5  5  DIX NA   9    9\n7   DIX  6  8  9  9 NA &lt;NA&gt;  4 DIX    9\n8     1  8 NA  8  6  2    3  5   9    7\n9   DIX  4  3  6  2  2    7 NA   6    9\n10    2  4  2  5  9  7    8  8   2    4"
  },
  {
    "objectID": "R/assist/posts/recodage_multiple/recodage_multiple.html#sur-une-sélection-de-variables",
    "href": "R/assist/posts/recodage_multiple/recodage_multiple.html#sur-une-sélection-de-variables",
    "title": "Recodage multiple",
    "section": "Sur une sélection de variables",
    "text": "Sur une sélection de variables\nLes jeux de données peuvent être composés d’un grand nombre de variables et donc on peut-être amené à effectuer un recodage uniquement sur certaines variables.\nL’exemple ci-dessous montre comment procéder à partir d’une sélection de variable stockée dans le vecteur var.\n\nExemple 3 : Recoder une sélection de variables\n\n# Je fais une copie de l'original\ndf2 &lt;- df\n# Je choisis certaines variables sur lesquelle on appliquera le recodage\nvar &lt;- c(\"V1\",\"V7\",\"V9\")\n\n# Fonctionne aussi avec la position de la colonne\n# var &lt;- c(2,5,6)\n\n# On crée une boucle qui s'activera uniquement pour les variables contenues \n# dans var\n\nfor (i in var) {\n  df2[[i]] &lt;- ifelse(df2[[i]] == 10, \"DIX\", df2[[i]])\n}\n\n\ndf2\n\n     V1 V2 V3 V4 V5 V6   V7 V8  V9 V10\n1     8 NA  8  5  8  5    5  8   6   1\n2     3  4  8  9  7  7    6  6   6   9\n3     6  4  4  9  8  1    5  3   2  NA\n4  &lt;NA&gt;  9  4  5  6  1    7  6   5  10\n5     1  5  1  3  7  5    6  5   1  10\n6     6  9  9  3  5  5  DIX NA   9   9\n7   DIX  6  8  9  9 NA &lt;NA&gt;  4 DIX   9\n8     1  8 NA  8  6  2    3  5   9   7\n9   DIX  4  3  6  2  2    7 NA   6   9\n10    2  4  2  5  9  7    8  8   2   4\n\n\nSeulement les variables V1, V7 et V9 ont été recodées. On remarque que des valeurs 10 sont présentes dans la variable V10."
  },
  {
    "objectID": "R/assist/posts/recodage_multiple/recodage_multiple.html#sur-lensemble-des-données-1",
    "href": "R/assist/posts/recodage_multiple/recodage_multiple.html#sur-lensemble-des-données-1",
    "title": "Recodage multiple",
    "section": "Sur l’ensemble des données",
    "text": "Sur l’ensemble des données\nLa fonction mutate_all permet de recoder l’ensemble des variables du jeu de données.\n\nExemple 4 : mutate_all\nOn remplace l’ensemble de 7 par la valeur “SEPT”\n\nlibrary(dplyr)\n\ndf2 &lt;- df %&gt;% \n  mutate_all(~ifelse(. == 7, \"SEPT\", .))\ndf2\n\n   V1 V2 V3 V4   V5   V6   V7 V8 V9  V10\n1   8 NA  8  5    8    5    5  8  6    1\n2   3  4  8  9 SEPT SEPT    6  6  6    9\n3   6  4  4  9    8    1    5  3  2 &lt;NA&gt;\n4  NA  9  4  5    6    1 SEPT  6  5   10\n5   1  5  1  3 SEPT    5    6  5  1   10\n6   6  9  9  3    5    5   10 NA  9    9\n7  10  6  8  9    9 &lt;NA&gt; &lt;NA&gt;  4 10    9\n8   1  8 NA  8    6    2    3  5  9 SEPT\n9  10  4  3  6    2    2 SEPT NA  6    9\n10  2  4  2  5    9 SEPT    8  8  2    4\n\n\n\nLe signe ~ est obligatoire, et permet d’indiquer qu’on applique la formule qui le suit à l’ensemble du jeu de données.\nLes . sont une spécificité de la syntaxe sous forme de pipes (%&gt;%). Ils sont synonymes de la base de données en entrée (df) mais permet de tenir compte de toutes les transformations des pipes précédentes faites sur cette base."
  },
  {
    "objectID": "R/assist/posts/recodage_multiple/recodage_multiple.html#sur-une-sélection-de-variables-1",
    "href": "R/assist/posts/recodage_multiple/recodage_multiple.html#sur-une-sélection-de-variables-1",
    "title": "Recodage multiple",
    "section": "Sur une sélection de variables",
    "text": "Sur une sélection de variables\nLes fonctions mutate_if et mutate_at permettent d’appliquer un recodage mais uniquement sur des variables choisies par une ou plusieurs conditions.\n\nExemple 5 : mutate_if\nDans cet exemple, on va appliquer un recodage uniquement aux variables numériques. Pour l’exemple, on commence par créer une variable catégorielle var_categ, sur laquelle le recodage ne s’appliquera pas.\n\ndf2 &lt;- df %&gt;% \n  mutate(var_categ = rep(c(\"bonjour\", \"5\"), 5)) %&gt;% \n  select(var_categ, everything())\ndf2\n\n   var_categ V1 V2 V3 V4 V5 V6 V7 V8 V9 V10\n1    bonjour  8 NA  8  5  8  5  5  8  6   1\n2          5  3  4  8  9  7  7  6  6  6   9\n3    bonjour  6  4  4  9  8  1  5  3  2  NA\n4          5 NA  9  4  5  6  1  7  6  5  10\n5    bonjour  1  5  1  3  7  5  6  5  1  10\n6          5  6  9  9  3  5  5 10 NA  9   9\n7    bonjour 10  6  8  9  9 NA NA  4 10   9\n8          5  1  8 NA  8  6  2  3  5  9   7\n9    bonjour 10  4  3  6  2  2  7 NA  6   9\n10         5  2  4  2  5  9  7  8  8  2   4\n\n\nOn utilise mutate_if, pour changer la valeur 5 en CINQ, uniquement pour les variables numériques.\n\ndf2 &lt;- df2 %&gt;% \n  mutate_if(is.numeric, ~ifelse(. == 5, \"CINQ\", .))\ndf2\n\n   var_categ V1   V2 V3   V4   V5   V6   V7   V8   V9 V10\n1    bonjour  8 &lt;NA&gt;  8 CINQ    8 CINQ CINQ    8    6   1\n2          5  3    4  8    9    7    7    6    6    6   9\n3    bonjour  6    4  4    9    8    1 CINQ    3    2  NA\n4          5 NA    9  4 CINQ    6    1    7    6 CINQ  10\n5    bonjour  1 CINQ  1    3    7 CINQ    6 CINQ    1  10\n6          5  6    9  9    3 CINQ CINQ   10 &lt;NA&gt;    9   9\n7    bonjour 10    6  8    9    9 &lt;NA&gt; &lt;NA&gt;    4   10   9\n8          5  1    8 NA    8    6    2    3 CINQ    9   7\n9    bonjour 10    4  3    6    2    2    7 &lt;NA&gt;    6   9\n10         5  2    4  2 CINQ    9    7    8    8    2   4\n\n\n\n\nExemple 6 : mutate_at\nla fonction mutate_at permet d’appliquer un recodage à un ensemble de variables définies par leur nom.\nIci, on applique le recodage uniquement aux variables qui continennent la chaîne de caractéres V1 dans leur nom de variables, on recode donc V1 et V10.\n\n# Sélection des variables\nvar &lt;- grep(\"1\", names(df), value=TRUE)\nvar\n\n[1] \"V1\"  \"V10\"\n\n# On recode les NA en VAL.MANQ pour les variables de var\ndf2 &lt;- df %&gt;% \n  mutate_at(var, ~ ifelse(is.na(.) == TRUE, \"VAL.MANQ\", .))\ndf2\n\n         V1 V2 V3 V4 V5 V6 V7 V8 V9      V10\n1         8 NA  8  5  8  5  5  8  6        1\n2         3  4  8  9  7  7  6  6  6        9\n3         6  4  4  9  8  1  5  3  2 VAL.MANQ\n4  VAL.MANQ  9  4  5  6  1  7  6  5       10\n5         1  5  1  3  7  5  6  5  1       10\n6         6  9  9  3  5  5 10 NA  9        9\n7        10  6  8  9  9 NA NA  4 10        9\n8         1  8 NA  8  6  2  3  5  9        7\n9        10  4  3  6  2  2  7 NA  6        9\n10        2  4  2  5  9  7  8  8  2        4"
  },
  {
    "objectID": "R/assist/posts/import_json/JSON.html",
    "href": "R/assist/posts/import_json/JSON.html",
    "title": "Format JSON : de la liste au dataframe",
    "section": "",
    "text": "Fonctions utilisées dans la fiche\n\n\nPackages\nFonctions\n\n\n\n\njsonlite\nfromJSON\n\n\nrjson\nfromJSON\n\n\ndata.table\nrbindlist\n\n\nBase R\nas.data.frame - knitr - class"
  },
  {
    "objectID": "R/assist/posts/import_json/JSON.html#footnotes",
    "href": "R/assist/posts/import_json/JSON.html#footnotes",
    "title": "Format JSON : de la liste au dataframe",
    "section": "Notes de bas de page",
    "text": "Notes de bas de page\n\n\nhttps://ressources.data.sncf.com/explore/dataset/menus-des-bars-tgv/table/↩︎\nPour découvrir comment utiliser des listes : https://juba.github.io/tidyverse/16-structures-donnees.html#sec-listes↩︎"
  },
  {
    "objectID": "R/assist/posts/fuzzyjoin/fuzzyjoin.html",
    "href": "R/assist/posts/fuzzyjoin/fuzzyjoin.html",
    "title": "Techniques appariements entre chaînes de caractères",
    "section": "",
    "text": "En démographie historique, on est souvent amenés à confronter des chaines de caractères pour relier des enregistrements nominatifs, par exemple chaîner des actes BMS (Baptême-Mariage-Sépulture) pour essayer de retrouver le parcours d’un individu. Dans les actes du 18ème siècle, l’identification des individus, lieux ou professions est souvent rédigée avec une forte hétérogénéité. Il en résulte une jointure par recherche floue, avec des chaînes de caractères identifiantes qui correspondent à une problématique de recherche approximative.\nPour ce faire, on va calculer une distance entre 2 chaînes de caractères, qui pourra être un nombre absolu représentant un degré de ressemblance des deux chaînes comparées, ou un nombre relatif, score variant de 0 à 1 par exemple, distance définie pour mesurer cette proximité.\nUn des algorithmes les plus utilisés est l’algorithme de Lehvenshtein, qui calcule entre deux chaines de caractères la plus courte distance, en tenant compte des opérations suivantes:\n\nInsertion de motifs.\nSuppression de motifs (équivalent à la règle précédente).\nSubstitution de motifs.\n\n\n\n\nPackages\nFonctions\n\n\n\n\nstringdist\nstringdist - amatch\n\n\ntidyverse\ninner_join\n\n\nfuzzyjoin\nstringdist_inner_join\n\n\n\nLes packages utilisés seront les suivants:\n\ntidyverse\nstringdist\nfuzzyjoin\n\n\n#install.packages(stringdist)\n#install.packages(tidyverse)\n#install.packages(fuzzyjoin)\n\nlibrary(stringdist)\nlibrary(tidyverse)\nlibrary(fuzzyjoin)"
  },
  {
    "objectID": "R/assist/posts/fuzzyjoin/fuzzyjoin.html#utilisation-dans-le-cas-dappariements-de-fichiers",
    "href": "R/assist/posts/fuzzyjoin/fuzzyjoin.html#utilisation-dans-le-cas-dappariements-de-fichiers",
    "title": "Techniques appariements entre chaînes de caractères",
    "section": "Utilisation dans le cas d’appariements de fichiers",
    "text": "Utilisation dans le cas d’appariements de fichiers\nNous disposons de deux fichiers d’analyse, un fichier de dénombrement recensant toutes les identités (nom-prenom) des individus présents dans un village en 1702 (nommé REC.Vars), et un fichier des baptêmes comptabilisés en 1703, contenant le nom et le prénom du père du nouveau né. On aimerait identifier les parents qui ont été recensés dans le village en 1702.\nLa fonction stringdist_join, du package fuzzyjoin, permet de faire une jointure avec une incertitude sur la clé de jonction des fichiers.\nCi-dessous le début du fichier des Baptêmes\n# Affichage début de fichier\nkable(head(BAP.Vars,n=10)) %&gt;%\n   kable_styling(bootstrap_options = c(\"striped\"),full_width = T,font_size = 11) %&gt;%\n   scroll_box(height = \"300px\")\n\n\n\n\n\nPERE.Nom\nPERE.Prenom\nNobs.BAP\n\n\n\n\nANTOINE\nJEAN\n10\n\n\nALENE\nJEAN\n12\n\n\nAUBER\nCHALLE\n16\n\n\nABEILLE\nBARTHELLEMY\n27\n\n\nANTOINE\nTHOMAS\n29\n\n\nAUDIFRETTE\nPIERRE\n36\n\n\nAUDON\nJEAN\n40\n\n\nARNAUD\nFRANCOIS\n42\n\n\nARNAUD\nCLAUDE\n48\n\n\nANGLESY\nANDRE\n67\n\n\n\n\n\n\n\nCi-dessous le début du fichier de recensement\n# Affichage début de fichier\nkable(head(REC.Vars,n=10)) %&gt;%\n   kable_styling(bootstrap_options = c(\"striped\"),full_width = T,font_size = 11) %&gt;%\n   scroll_box(height = \"300px\")\n\n\n\n\n\nEgo.nom\nEgo.prenom\nNobs.REC\n\n\n\n\nANDRE\n.\n4\n\n\nAMARE\nFRANCOISE\n15\n\n\nAMARE\nCATHERINE\n17\n\n\nALEMANDE\nCATHERINE\n50\n\n\nARNAUD\nFRANCOIS\n68\n\n\nARNAUD\nJOSEPH\n70\n\n\nARNAUD\nURSULLE\n71\n\n\nARNAUD\nMARGUERITE\n72\n\n\nARNAUD\nJEANNE\n73\n\n\nANTOINE\nANNE\n85\n\n\n\n\n\n\n\nPar une jointure classique, on veut sélectionner les individus portant le même nom et le même prénom dans les deux fichiers. On fait donc appel à une syntaxe inner_join.\nZ1 = BAP.Vars %&gt;%\n  inner_join(REC.Vars,by=c(\"PERE.Nom\"=\"Ego.nom\",\"PERE.Prenom\"=\"Ego.prenom\"))\n\n\n# Affichage début de fichier\nkable(head(Z1,n=10)) %&gt;%\n   kable_styling(bootstrap_options = c(\"striped\"),full_width = T,font_size = 11) %&gt;%\n   scroll_box(height = \"300px\")\n\n\n\n\n\nPERE.Nom\nPERE.Prenom\nNobs.BAP\nNobs.REC\n\n\n\n\nANTOINE\nJEAN\n10\n2953\n\n\nAUDON\nJEAN\n40\n148\n\n\nARNAUD\nFRANCOIS\n42\n68\n\n\nARNAUD\nCLAUDE\n48\n1870\n\n\nAUBERT\nJEAN\n220\n1227\n\n\nAUDIBERT\nLEON\n304\n1157\n\n\nAUDIBERT\nJEAN\n333\n3183\n\n\nABEILLE\nJOSEPH\n1115\n625\n\n\nAUDIBERT\nJACQUES\n1437\n1156\n\n\nARDISSON\nJEAN\n1441\n4661\n\n\n\n\n\n\n\nOn souhaite maintenant unifier les individus portant le même prénom et différent d’une lettre sur le nom de famille, pour prendre en compte les variantes orthographiques minimes.\nZ2 = BAP.Vars %&gt;%\n  \n  # max_dist = Distance maximale de égale à un entre les deux patronymes\n  # distance_col =  nom de la variable créée contenant la valeur de distance\n  stringdist_inner_join(REC.Vars,by=c(\"PERE.Nom\"=\"Ego.nom\"),max_dist=1,distance_col=\"V_Dist\") %&gt;%\n  \n  # On ne garde que les distances égales à 1\n  filter(V_Dist==1) %&gt;%\n  \n  # On ne conserve que les individus de même prénom\n  filter(stringdist(PERE.Prenom,Ego.prenom)==0) %&gt;%\n  \n  # Suppression variable de distance\n  select(-V_Dist)\n\n\n# Affichage début de fichier\nkable(head(Z2,n=30)) %&gt;%\n   kable_styling(bootstrap_options = c(\"striped\"),full_width = T,font_size = 11) %&gt;%\n   scroll_box(height = \"300px\")\n\n\n\n\n\nPERE.Nom\nPERE.Prenom\nNobs.BAP\nEgo.nom\nEgo.prenom\nNobs.REC\n\n\n\n\nAUBERTE\nJOSEPH\n78\nAUBERT\nJOSEPH\n5052\n\n\nAMIEL\nPONCET\n234\nAMIELH\nPONCET\n328\n\n\nANTHOINE\nJEAN\n518\nANTOINE\nJEAN\n2953\n\n\nAUDIBERTE\nPIERRE\n587\nAUDIBERT\nPIERRE\n2677\n\n\nARNAUDE\nCLAUDE\n673\nARNAUD\nCLAUDE\n1870\n\n\nAUDIBERTE\nLEON\n765\nAUDIBERT\nLEON\n1157\n\n\nAUBERT\nPIERRE\n970\nAUBRET\nPIERRE\n2998\n\n\nAUTRAN\nJEAN\n1026\nAUBRAN\nJEAN\n5192\n\n\nACHARDE\nCLAUDE\n1502\nACHARD\nCLAUDE\n2060\n\n\nANTHOINE\nPIERRE\n2027\nANTOINE\nPIERRE\n2952\n\n\nACHARDE\nJEAN\n2363\nACHARD\nJEAN\n2057\n\n\nARNAUDE\nPIERRE\n2427\nARNAUD\nPIERRE\n1757\n\n\nALIS\nJOSEPH\n2537\nALIX\nJOSEPH\n1499\n\n\nAYNAUD\nJOSEPH\n3176\nARNAUD\nJOSEPH\n70\n\n\nAUBINE\nJACQUES\n3703\nAUBIN\nJACQUES\n2181\n\n\nAUTRANE\nANTOINE\n3801\nAUTRAN\nANTOINE\n5040\n\n\nAUDIBERTE\nJEAN\n3844\nAUDIBERT\nJEAN\n3183\n\n\nANTHEMAN\nPAUL\n3872\nAUTHEMAN\nPAUL\n5353\n\n\nALLEMAND\nHONNORE\n4017\nALEMAND\nHONNORE\n2853\n\n\nARNAUDE\nSEBASTIEN\n4075\nARNAUD\nSEBASTIEN\n3937\n\n\nAUBERT\nJEAN PIERRE\n4095\nAUBRET\nJEAN PIERRE\n4843\n\n\nAUDIBERTE\nANTOINE\n4112\nAUDIBERT\nANTOINE\n5017\n\n\nARMIOU\nANTOINE\n4130\nARMIEU\nANTOINE\n4320\n\n\nAUTIERE\nANDRE\n4195\nAUGIERE\nANDRE\n4856\n\n\nAUTIERE\nANDRE\n4195\nAUZIERE\nANDRE\n7942\n\n\nARNAUDE\nESTIENNE\n4197\nARNAUD\nESTIENNE\n5236\n\n\nACHART\nJEAN\n4204\nACHARD\nJEAN\n2057\n\n\nAUDIERE\nJEAN\n4337\nAUDIER\nJEAN\n5163\n\n\nACHARDE\nLOUIS\n4342\nACHARD\nLOUIS\n3386\n\n\nAUBRANT\nJEAN\n4481\nAUBRAN\nJEAN\n5192"
  },
  {
    "objectID": "R/assist/posts/dhs/dhs.html",
    "href": "R/assist/posts/dhs/dhs.html",
    "title": "Statistiques descriptives à partir d’enquêtes DHS",
    "section": "",
    "text": "Fonctions utilisées dans la fiche\n\n\nPackages\nFonctions\n\n\n\n\nreadstata13\nread.dta13\n\n\nrio\nfactorize\n\n\ndyplyr\nmutate group by summerize\n\n\nquestionr\nfreq\n\n\nBase R\nstr - summary\nLes enquêtes Démographiques et de Santé (DHS) sont régulièrement utilisées par les chercheurs travaillant sur le continent africain, l’amérique centrale et du sud ou l’asie du sud.\nLes fichiers issus de questionnaires Ménages, Femmes et Hommes ont la même structure dans tous les pays participant à chaque phase de l’enquête : 400 enquêtes dans 90 pays en 2023. Les régles de recodage sont définies dans le Standard recode manuel DHS 6\nCet exemple s’inspire des fiches pédagogiques produites dans le cadre de l’école d’été du Collège International des Sciences Territoriales avec la lecture de fichiers téléchargés, l’identification des types de variables et la production d’indicateurs et de graphiques simples.\nDocumentation :\nInstallation des packages :\nFichiers à disposition :\nLes fichiers contiennent 10% des individus des tables téléchargées du site enquêtes DHS au format Stata (.dta) et rassemblent les réponses de l’enquête passée au Bénin en 2017 (vague 7).\nNous utilisons ici uniquement les fichiers niveau Ménages, niveau Femmes, et niveau Enfants de l’enquête passée au Bénin en 2017 (vague 7). Ces fichiers sont initialement au format Stata (.dta).\nOn va selectionner quelques variables à partir des fichiers initiaux."
  },
  {
    "objectID": "R/assist/posts/dhs/dhs.html#appel-des-packages",
    "href": "R/assist/posts/dhs/dhs.html#appel-des-packages",
    "title": "Statistiques descriptives à partir d’enquêtes DHS",
    "section": "Appel des packages",
    "text": "Appel des packages\n\nlibrary(readstata13)\nlibrary(rio)\nlibrary(dplyr)\nlibrary(questionr)\nlibrary(tidyverse)\nlibrary(esquisse)"
  },
  {
    "objectID": "R/assist/posts/dhs/dhs.html#afficher-le-contenu-des-tables",
    "href": "R/assist/posts/dhs/dhs.html#afficher-le-contenu-des-tables",
    "title": "Statistiques descriptives à partir d’enquêtes DHS",
    "section": "Afficher le contenu des tables",
    "text": "Afficher le contenu des tables\nPour rappel, la fonction str(matable) permet d’afficher le nombre d’observations et de variables d’une table R mais aussi son type qui conditionne l’utilisation de fonctions.\nUne variable qualitative peut être stockée en factor ou character et une variable numérique en integer pour des nombres entiers).\n\nstr(Be_Menages)\n\n'data.frame':   1416 obs. of  12 variables:\n $ hhid  : chr  \"       1  46\" \"       1 119\" \"       1 131\" \"       1 143\" ...\n $ hv000 : chr  \"BJ7\" \"BJ7\" \"BJ7\" \"BJ7\" ...\n $ hv001 : int  1 1 1 1 2 3 3 4 6 6 ...\n $ hv002 : int  46 119 131 143 25 11 47 149 37 63 ...\n $ hv003 : Factor w/ 10 levels \"incomplete household\",..: 5 2 5 2 2 2 5 5 5 2 ...\n $ hv024 : Factor w/ 12 levels \"alibori\",\"atacora\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ hv025 : Factor w/ 2 levels \"urban\",\"rural\": 2 2 2 2 2 2 2 2 2 2 ...\n $ hv230b: Factor w/ 2 levels \"water not available\",..: NA NA NA NA 1 NA NA 1 NA 1 ...\n $ hv227 : Factor w/ 2 levels \"no\",\"yes\": 2 2 1 1 2 1 2 2 2 2 ...\n $ hv219 : Factor w/ 2 levels \"male\",\"female\": 1 1 1 1 1 2 1 1 1 1 ...\n $ hv220 : Factor w/ 78 levels \"16\",\"17\",\"18\",..: 50 20 22 58 32 50 13 25 21 29 ...\n $ hv221 : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 1 1 1 ...\n\n\nLa table contient 1416 observations et 12 variables. On dénombre 1416 ménages au Bénin.\nLa variable hhid (identifiant du ménage) est de type character (char), la variable hv001 (cluster number) est de type entier (int) et la variable hv003 (numéro du répondant) est de type facteur (Factor)."
  },
  {
    "objectID": "R/assist/posts/dhs/dhs.html#répartition-des-ménages",
    "href": "R/assist/posts/dhs/dhs.html#répartition-des-ménages",
    "title": "Statistiques descriptives à partir d’enquêtes DHS",
    "section": "Répartition des ménages …",
    "text": "Répartition des ménages …\n\nSelon le type de commune\n\nLa variable hv025 (milieu rural ou urbain) est une variable qualitative de type facteur (Factor) .\n\n# Comme la variable est de type Factor on peut utiliser la fonction summary qui va afficher les effectif\nsummary(Be_Menages$hv025)\n\nurban rural \n  616   800 \n\n# On utilise la fonction freq du package questionr pour afficher aussi les %\nfreq(Be_Menages$hv025, cum=F)\n\n        n    % val%\nurban 616 43.5 43.5\nrural 800 56.5 56.5\n\n\nOn trouve 800 Menages habitant en milieu rural, soit près de 57% des ménages interrogés au Bénin dans notre échantillon.\n\n…Selon le fait de posséder une moustiquaire\n\nOn prend la variable hv227:Has mosquito bed net for sleeping de la table Ménages pour calculer la répartition et faire le graphique associé\n\n\n\nRépartition\n\nfreq(Be_Menages$hv227, cum=F)\n\n\n       n    % val%\nno    89  6.3  6.3\nyes 1327 93.7 93.7\n\n\n\n\n\nGraphique\n\nggplot(Be_Menages) +\n  aes(x = hv227) +\n  geom_bar(position = \"dodge\", fill = \"#112446\") +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nPrès de 94% des ménages de notre fichier possèdent une moustiquaire pour dormir.\n\n…Selon l’accès à l’eau pour se laver les mains\n\nOn prend la variable hv230b (Presence of water at hand washing place) de la table Ménages\n\n\n\nRépartition\n\n# Répartition\nfreq(Be_Menages$hv230b, cum=F)\n\n\n                      n    % val%\nwater not available 441 31.1   57\nwater is available  333 23.5   43\nNA                  642 45.3   NA\n\n\n\n\n\nGraphique\n\nggplot(Be_Menages) +\n  aes(x = hv230b) +\n  geom_bar(position = \"dodge\", fill = \"#112446\") +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nParmi les répondants à cette question (près de 55% des ménages), seulement près d’un tiers a accès à l’eau pour se laver les mains.\n\n…Selon l’âge des chefs de ménage\n\nLa variable hv220 (age) est de type facteur, on peut calculer la répartition.\n\nfreq(Be_Menages$hv220,cum=T)\n\n            n   % val%  %cum val%cum\n16          2 0.1  0.1   0.1     0.1\n17          1 0.1  0.1   0.2     0.2\n18          2 0.1  0.1   0.4     0.4\n19          5 0.4  0.4   0.7     0.7\n20          6 0.4  0.4   1.1     1.1\n21          9 0.6  0.6   1.8     1.8\n22         17 1.2  1.2   3.0     3.0\n23         17 1.2  1.2   4.2     4.2\n24         17 1.2  1.2   5.4     5.4\n25         41 2.9  2.9   8.3     8.3\n26         17 1.2  1.2   9.5     9.5\n27         29 2.0  2.0  11.5    11.5\n28         49 3.5  3.5  15.0    15.0\n29         30 2.1  2.1  17.1    17.1\n30         55 3.9  3.9  21.0    21.0\n31         29 2.0  2.0  23.0    23.0\n32         52 3.7  3.7  26.7    26.7\n33         31 2.2  2.2  28.9    28.9\n34         30 2.1  2.1  31.0    31.0\n35         51 3.6  3.6  34.6    34.6\n36         18 1.3  1.3  35.9    35.9\n37         43 3.0  3.0  38.9    38.9\n38         28 2.0  2.0  40.9    40.9\n39         26 1.8  1.8  42.7    42.7\n40         53 3.7  3.7  46.5    46.5\n41         35 2.5  2.5  48.9    48.9\n42         32 2.3  2.3  51.2    51.2\n43         28 2.0  2.0  53.2    53.2\n44         18 1.3  1.3  54.4    54.4\n45         61 4.3  4.3  58.8    58.8\n46         21 1.5  1.5  60.2    60.2\n47         37 2.6  2.6  62.9    62.9\n48         17 1.2  1.2  64.1    64.1\n49         24 1.7  1.7  65.7    65.7\n50         25 1.8  1.8  67.5    67.5\n51         13 0.9  0.9  68.4    68.4\n52         27 1.9  1.9  70.3    70.3\n53         16 1.1  1.1  71.5    71.5\n54         11 0.8  0.8  72.2    72.2\n55         30 2.1  2.1  74.4    74.4\n56         17 1.2  1.2  75.6    75.6\n57         33 2.3  2.3  77.9    77.9\n58         17 1.2  1.2  79.1    79.1\n59          7 0.5  0.5  79.6    79.6\n60         31 2.2  2.2  81.8    81.8\n61         17 1.2  1.2  83.0    83.0\n62         20 1.4  1.4  84.4    84.4\n63         11 0.8  0.8  85.2    85.2\n64          3 0.2  0.2  85.4    85.4\n65         26 1.8  1.8  87.2    87.2\n66         13 0.9  0.9  88.1    88.1\n67         15 1.1  1.1  89.2    89.2\n68         19 1.3  1.3  90.5    90.5\n69         11 0.8  0.8  91.3    91.3\n70         26 1.8  1.8  93.1    93.1\n71         14 1.0  1.0  94.1    94.1\n72         10 0.7  0.7  94.8    94.8\n73          7 0.5  0.5  95.3    95.3\n74          4 0.3  0.3  95.6    95.6\n75         10 0.7  0.7  96.3    96.3\n76          5 0.4  0.4  96.7    96.7\n77          7 0.5  0.5  97.2    97.2\n78          6 0.4  0.4  97.6    97.6\n79          2 0.1  0.1  97.7    97.7\n80          9 0.6  0.6  98.4    98.4\n81          3 0.2  0.2  98.6    98.6\n82          3 0.2  0.2  98.8    98.8\n83          1 0.1  0.1  98.9    98.9\n84          1 0.1  0.1  98.9    98.9\n85          6 0.4  0.4  99.4    99.4\n86          1 0.1  0.1  99.4    99.4\n87          2 0.1  0.1  99.6    99.6\n88          1 0.1  0.1  99.6    99.6\n90          2 0.1  0.1  99.8    99.8\n92          2 0.1  0.1  99.9    99.9\n95          1 0.1  0.1 100.0   100.0\n97+         0 0.0  0.0 100.0   100.0\ndon't know  0 0.0  0.0 100.0   100.0\n\n\nLes modalités de la variable h220 sont ordonnées, le calcul des fréquences cumulées a un sens et on peut dire que la moité des chefs de ménages a moins de 42 ans."
  },
  {
    "objectID": "R/assist/posts/dhs/dhs.html#composition-des-ménages",
    "href": "R/assist/posts/dhs/dhs.html#composition-des-ménages",
    "title": "Statistiques descriptives à partir d’enquêtes DHS",
    "section": "Composition des ménages",
    "text": "Composition des ménages\nIci on se sert des informations des tables Femmes et Enfants pour calculer leur nombre dans les ménages de notre échantillon … On crée un identifiant ménage (hhid) pour chacune des tables. Et on ajoute ce nouvelle variable dans chacune des tables.\n\nNombre de femmes par ménage\n\nOn génère un compteur pour calculer le nombre de femmes par ménages (qui ont un identifiant de ménage identique): Nbfem. On ajoute cette nouvelle variable dans la table Femmes. Cette variable est une variable numérique de type integer (int) dans R. On peut alors calculer la répartition du nombre de femmes dans les menages.\n\n\n\ncréation de la variable nombre de femmes par ménage\n\nBe_Femmes2&lt;-Be_Femmes%&gt;% \n  mutate(hhid=paste(v001,v002,sep=\" \"))\n# On générère la variable nombreb de femmes par ménage : Nbfem\nBe_Femmes3=Be_Femmes2 %&gt;%\n  group_by(hhid) %&gt;%\n  summarise(Nbfem = n())\n\n\n\n\n\nRécupération de la variable Nbfem dans la table\n\n# On ajoute les variables de la table avec le nombre de femmes dans la table femme \nBe_Femmes22&lt;-Be_Femmes3 %&gt;%\n  left_join(Be_Femmes2,by=\"hhid\")\n\n\n\n# Si variable numérique\nsummary(Be_Femmes22$Nbfem)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   1.000   1.000   1.102   1.000   4.000 \n\n# Si variable discrète\ntable(Be_Femmes22$Nbfem)\n\n\n   1    2    3    4 \n1445  138    6    4 \n\n\nOn dénombre 1445 ménages composés d’une femme, 138 de 2 femmes et 10 ménages de 3 ou 4 femmes dans l’echantillon extrait de l’enquête passée au Bénin.\n\nNombre moyen d’enfants vivants dans les ménages\n\nOn peut calculer et représenter sur un graphique le nombre d’enfants vivants (v218:Number of living children)\n\nsummary(Be_Enfants$v218)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   2.000   3.000   3.491   5.000  10.000 \n\n\nParmi les enfants vivants de la table Enfants on trouve au minimum 0 enfants vivants et 10 au maximum. On trouve en moyenne 3,5 enfants vivants par ménages et la moitié des ménages enquêtés ont 3 enfants.\nOn peut visualiser ces statistiques sur un graphique de type Box-Plot. Le code ggplot a été récupéré à partir d’un graphique généré avec esquisse lien fiche\n\nggplot(Be_Enfants) +\n  aes(x = \"\", y = v218) +\n  geom_boxplot(fill = \"#526747\") +\n  theme_classic()"
  },
  {
    "objectID": "R/assist/posts/addins/addins.html",
    "href": "R/assist/posts/addins/addins.html",
    "title": "Produire des graphiques et recoder des variables sans écrire de code R",
    "section": "",
    "text": "Fonctions utilisées dans la fiche\n\n\nPackages\nFonctions\n\n\n\n\nesquisse\nggplot2\n\n\nquestionr\nirec\nDans cette fiche vous verrez comment utiliser des Addins associés à certains packages de R qui permettent de produire le code R de façon interactive pour :\nCes exemples s’inspire des fiches pédagogiques produites dans le cadre de l’école d’été du Collège International des Sciences Territoriales.\nLe fichier utilisé ici contient 10% des individus de la table Ménages extraite de l’enquête DHS passée au Bénin en 2017 (vague 7).\nDocumentation:\nInstallation des packages"
  },
  {
    "objectID": "R/assist/posts/addins/addins.html#chargement-des-données",
    "href": "R/assist/posts/addins/addins.html#chargement-des-données",
    "title": "Produire des graphiques et recoder des variables sans écrire de code R",
    "section": "Chargement des données",
    "text": "Chargement des données\nLorsque l’application est ouverte, on accède directement à la fenêtre de chargement des données. Ici, comme les données ont été chargée dans R, elles sont directement accessibles &lt;\\&gt;environnement.\n\n\n\n\n\nSélection et visualisation de la table à l’aide de l’onglet View.\n\n\n\n\n\nSous le nom de chaque variable, on peut voir son type R : integer, factor, character.\nOn peut visualiser les modalités associées aux variables avec le bouton Data (en bas de la fenêtre)."
  },
  {
    "objectID": "R/assist/posts/addins/addins.html#production-dun-graphique",
    "href": "R/assist/posts/addins/addins.html#production-dun-graphique",
    "title": "Produire des graphiques et recoder des variables sans écrire de code R",
    "section": "Production d’un graphique",
    "text": "Production d’un graphique\nLa fenêtre d’esquisse permet de choisir les données à représenter et propose un graphique adapté au type de la variable dans R. Ici une box-plot\n\n\n\n\n\nOn Sélectionne les variables par un glisser/déposer dans les zones correspondantes au paramétrage du graphique (x, y, fill, colors, size, … du package ggplot2).\nLe rôle de ces options sont données en cliquant sur le bouton display settings qui se trouve en haut à droite de la fenêtre principale.\n\n\n\n\n\nPour en savoir plus sur les graphiques à produire en fonction des données à représenter, on peut se reporter au site de Y. Holtz From data to Viz.\nPour l’exemple, on va représenter le nombre de ménages par pays d’enquête hv000 avec un graphique en barres.\n\n\n\n\n\nSi on souhaite modifier orienter les barres à l’horizontal (recommandé) on va dans l’onglet Plot options puis on coche Flip coordinate.\nOn utilise le bouton Plot options pour changer la disposition (ici barres horizontales).\n\n\n\n\n\nOn peut égalemet changer les titres du graphique dans l’onglet Ad Labels & Titles, et son apparence (couleurs, thème) dans l’onglet Appearance."
  },
  {
    "objectID": "R/assist/posts/addins/addins.html#exporter-le-code",
    "href": "R/assist/posts/addins/addins.html#exporter-le-code",
    "title": "Produire des graphiques et recoder des variables sans écrire de code R",
    "section": "Exporter le code",
    "text": "Exporter le code\nL’onglet Code affiche le code généré par l’application. On peut le récupérer par simple copier/coller\n\n\n\n\n\nComme l’interface ne permet pas de modifier la couleur du contour des barres, on peut le faire en modifiant légèrement le script. Après avoir collé le code du graphique dans un script, on ajoute par exemple à la fonction geom_bar() l’option color=\"black\"\n\nlibrary(ggplot2)\n\nggplot(P3_Menages) +\n  aes(x = hv000) +\n  geom_bar(fill = \"#FF6992\", color=\"black\") +\n  labs(\n    x = \"Enquête\",\n    y = \"Nombre de ménages\",\n    title = \"Ménages par pays et vagues d'enquête\",\n    caption = \"Source: DHS 2017\"\n  ) +\n  coord_flip() +\n  theme_light()\n\n\n\n\n\n\n\n\nL’animation qui suit résume les différentes étapes (cliquer sur l’image pour la faire redémarrer au début et l’agrandir)"
  },
  {
    "objectID": "Autres/assist/posts/social_embeds/social_embeds.html",
    "href": "Autres/assist/posts/social_embeds/social_embeds.html",
    "title": "Insertion d’une vidéo Youtube ou Viméo",
    "section": "",
    "text": "Liens\n\n\n\n\nExtension social-embeds\nExtensions Quarto disponibles\n\n\n\n\nInstallation de l’extension\nDans le terminal exécuter:\n\nquarto install extension sellorm/quarto-social-embeds\n\n\n\nInsertion d’une vidéo Youtube\n\nOn ajoute l’identifiant de la vidéo dans le code .\nPour la vidéo dont la cible affichée dans la barre d’adresse est watch?v=tlt0WGZz63Y, l’identifiant est tlt0WGZz63Y\n\nPar exemple pour la Présentation du package R.témis par M.Bouchet-Valat et B.Garnier\n\n\n\nInserer directement ce code dans la page\n\n{{&lt; youtube tlt0WGZz63Y &gt;}}\n\n\n\n\n\nInsertion d’une vidéo Viméo\nMême principe, on ajoute l’identifiant de la vidéo qui est affiché dans la barre d’adresse.\n\n\n\nInserer directement ce code dans la page\n\n{{&lt; vimeo 475084090 &gt;}}"
  },
  {
    "objectID": "Autres/assist/posts/remove_nul/remove_nul.html",
    "href": "Autres/assist/posts/remove_nul/remove_nul.html",
    "title": "Supprimer un fichier nul avec git",
    "section": "",
    "text": "Certains fichiers, en apparence vide de contenu, semblent non modifiable, et donc non supprimable. Cela empêche, entre autres, d’effacer un répertoire. C’est le cas des fichiers nul, qui sont créés assez régulièrement chez moi avec Quarto.\n\n\n\nImpossible de modifier le fichier\n\n\nOn peut nénmoins facilement les supprimer avec une installation de git sur son ordinateur [Intallation de git]\n\n\n\n\n\n\nA l’Ined\n\n\n\nGit est intégré à Applined, et peut donc être directement installé via cette application.\n\n\nSuppression du fichier\n\nDans le répertoire où se trouve ce type de fichier, fait un clic droit\nOuvrir la console: git bash here\nExécuter rm nul\n\n\n\n\nclic droit + ouvrir la console (git bash here) + rm nul\n\n\n\n\n\nLe fichier est supprimé"
  },
  {
    "objectID": "Autres/assist/posts/git_rstudio/git_rstudio.html",
    "href": "Autres/assist/posts/git_rstudio/git_rstudio.html",
    "title": "Rstudio et Git[hub/lab]: l’essentiel",
    "section": "",
    "text": "Prérequis:\n\nInstallé l’application git (https://git-scm.com/). A l’Ined elle peut être directement installée via applined\nAvoir un compte github (https://github.com/) ou gitlab (https://about.gitlab.com/)\n\nFormation Git: https://learngitbranching.js.org/?locale=fr_FR\n\n\n\n\n\n\nDébut de l’animation\n\n\n\nCliquer sur l’animation pour la faire redémarrer au début.\n\n\n\nCréation d’un dépôt Git\n\nLa méthode de clônage du dépôt montré ici utilise un lien https. Il est préférable de sécuriser les opérations de synchronisation avec une clé SSH. Elle peut être générée dans Rstudio (tools=&gt;global options=&gt;git/svn) et appliquée dans son compte git (dans github aller dans les settings de son profile puis dans “SSH and GPH keys”) [Oui…Faire un tuto là dessus].\nLe dépôt qui a été généré est de type public, on peut le créer en mode privé.\nSi on associe le dépôt à un projet Rstudio, il n’est pas utile de générer un fichier .gitignore car il sera automatiquement ajouté à la création du projet [indique les fichiers ou les types de fichiers qui ne seront pas synchronisés]\nOn récupère l’adresse du dépôt en allant sur le bouton &lt;&gt; clone\n\n\n\n\n\n\n\n\nCréation d’un projet Rstudio avec clônage du dépôt\n\n\n\n\n\n\n\nAjout d’un fichier dans le projet et l’envoyer dans le dépôt distant\nPetite remarque avec Quarto: éviter de faire un render d’un fichier .qmd qui n’est pas associé au projet actif de la session.\n\n\n\n\n\nLes opérations git effectuée sur le terminal sont a minima (git help).\n\ngit status permet, comme son nom l’indique, d’afficher les modifications apparues dans le projet depuis la dernière synchronisation. Optionnel, sans conséquence sur la synchronisation.\ngit add .: on peut sélectionner des fichiers particuliers, l’ajout de . permet de sélectionné l’ensemble des fichiers affichés avec git status.\nLe commit (commentaire) semble obligatoire dans rstudio. On peut le faire dans le terminal, mais je préfère aller dans la fenêtre commit accessible dans l’onglet git (en haut à droite de l’interface).\nUne fois le commentaire réalisé on peut envoyer les fichiers dans le dépôt en cliquant sur push ou dans le terminal exécuter git push\n\n\n\n\n\n\n\n\nEnvoyer des fichiers dans le dépôt alors qu’il a été modifié en amont\nSi le dépôt git a été modifié, par soit même ou par une personne associée au projet, on ne peut pas transférer des fichiers vers le dépôt à partir de son répertoire en local. On doit synchroniser le répertoire et le dépôt distant en faisant un pull dans l’onglet git ou dans le terminal avec git pull."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Présentation",
    "section": "",
    "text": "Contributions par ordre alphabétique:\n\nElodie Baril  \nArnaud Bringé \nCoralie Cottet \nBénédicte Garnier  \nArno Mulller  \nMarc Thévenin  \n\nMaintenance du support: Marc Thévenin"
  },
  {
    "objectID": "Autres/assist/posts/annotation/annotation.html",
    "href": "Autres/assist/posts/annotation/annotation.html",
    "title": "Commenter des lignes de codes",
    "section": "",
    "text": "A la suite d’une ligne de code on indique le numéro de l’annotation:\n\nligne de code    #&lt;1&gt;\nligne de code    #&lt;2&gt;\n\nA la suite du bloc, on commente chaque annotation:\n\n\nCommentaire annotation 1\n\n\nCommentaire annotation 2 etc…\n\n\n\n```r \n# Dans le bloc de codes\nlibrary(readr)                                                                                                    # &lt;1&gt;\nlibrary(survival)                                                                                                 \nlibrary(survminer)                                                                                                \n                       \ndf &lt;- read.csv(\"https://raw.githubusercontent.com/mthevenin/analyse_duree/master/bases/transplantation.csv\")      # &lt;2&gt;\n\nfit &lt;- survfit(Surv(stime, died) ~ 1, data = df )                                                                 # &lt;3&gt;\n\nggsurvplot(fit, conf.int = TRUE, risk.table = TRUE)                                                               # &lt;4&gt;\n\n```\n# Dans le corp du document .qmd à la suite du bloc\n\n1. Chargement des packages\n2. Chargement de la base\n3. Calcul des estimateurs de Kaplan-Meier\n4. Graphique de la fonction de survie avec `ggsurvplot`\nDonne le rendu suivant:\n\n1library(readr)\nlibrary(survival)                                                                                                 \nlibrary(survminer)                                                                                                \n                       \n2df &lt;- read.csv(\"https://raw.githubusercontent.com/mthevenin/analyse_duree/master/bases/transplantation.csv\")\n\n3fit &lt;- survfit(Surv(stime, died) ~ 1, data = df )\n\n4ggsurvplot(fit, conf.int = TRUE, risk.table = TRUE)\n\n\n1\n\nChargement des packages\n\n2\n\nChargement de la base\n\n3\n\nCalcul des estimateurs de Kaplan-Meier\n\n4\n\nGraphique de la fonction de survie avec ggsurvplot\n\n\n\n\n\n\n\n\n\n\n\nPar défaut, les commentaires s’affichent en dessous du bloc. Deux autres options sont disponibles, qui affichent le commentaire à droite de chaque ligne: une en passant sur la ligne( code-annotations: over) et une en cliquant sur la ligne code-annotations: select).\n---\ntitle: \"titre page\"\ncode-annotations: select\n---\n\n\n\n\n\nEn savoir plus"
  },
  {
    "objectID": "Autres/assist/posts/output_scss/output_scss.html",
    "href": "Autres/assist/posts/output_scss/output_scss.html",
    "title": "Modification de l’apparence des outputs avec un fichier .scss",
    "section": "",
    "text": "Par défaut le rendu des outputs console bruts (theme: default) est le suivant:\n\n\n\n\n\n\nAvec un fichier .scss on peut modifier le rendu de cet output.\n\nUn fichier styles.scss est généré automatiquement à la création d’un projet\nPour une page simple, on peut le créer facilement facilement à partir d’un fichier de type texte, en le renommant avec l’extension .scss, par exemple styles.scss.\n\nOn ajoute des éléments de modification de l’apparence au fichier .scss\nOn indique dans le yaml de la page ou le _quarto.yml du projet qu’on applique ces modifications.\n\nModifications de l’output console dans un fichier .scss\n$code-block-stdoutcolor: #37424a;\n$code-block-stdoutcolor-light: rgba($code-block-stdoutcolor, 0.5);\n$code-block-stdoutcolor-lighter: rgba($code-block-stdoutcolor, 0.1);\n\n/*-- scss:rules --*/\n\n.cell-output-display pre, .cell-output-stdout pre {\n    background-color: $code-block-stdoutcolor-lighter !important;\n    border: 1.5px solid $code-block-stdoutcolor-light;\n    border-radius: .25rem;\n    border-left: 4px;\n    border-left-style: solid;\n    border-left-color: $code-block-stdoutcolor;\n    padding: .4em;\n    color: #37424a\n}\n\n\n.cell-output pre code {\n    background-color: transparent;\n}\nIci on a modifier la couleur du fond (ici un gris:#37424a), l’épaisseur du contour (plus importante à gauche), le radius des angles du contour etc…\nyaml de la page ou du template quarto.yml du projet\nPour le yaml d’une page simple avec le fichier styles.scss\n---\n\ntitle=\"Changement couleur output\"\n\nformat:\n  html:\n    theme: [default, style.scss]\n---\nAprès exécution du programme, le rendu de l’output est le suivant:\n\noptions(show.signif.stars=FALSE)\n\nsummary(lm(Sepal.Length~Petal.Length, data=iris))\n\n\nCall:\nlm(formula = Sepal.Length ~ Petal.Length, data = iris)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.24675 -0.29657 -0.01515  0.27676  1.00269 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)   4.30660    0.07839   54.94   &lt;2e-16\nPetal.Length  0.40892    0.01889   21.65   &lt;2e-16\n\nResidual standard error: 0.4071 on 148 degrees of freedom\nMultiple R-squared:   0.76, Adjusted R-squared:  0.7583 \nF-statistic: 468.6 on 1 and 148 DF,  p-value: &lt; 2.2e-16\n\n\n\n\n\n\n\n\nExportation pdf\n\n\n\nSi le document est exporté en PDF avec l’option formats dans le yaml, les modifications ne sont pas prises en compte."
  },
  {
    "objectID": "Autres/assist/posts/self_contained/self_contained.html",
    "href": "Autres/assist/posts/self_contained/self_contained.html",
    "title": "Transmettre un fichier html sans le répertoire *_html_libs",
    "section": "",
    "text": "Par défaut, en générant un simple page html avec quarto un répertoitre nomfichier_html_files est également créer.\nPar exemple on génère le fichier .qmd suivant, enregistré sous le nom default.qmd. Le répertoire default_html_files est également généré lors du render de la page:\n\n\n\n\n\nLe rendu html, conforme aux attentes, est le suivant:\n\n\n\n\n\nSi on souhaite déplacer le fichier default.html seul, le répertoire default_html_files le suit inéxorablement. Même chose si on supprime le fichier html, le répertoire disparait également.\n\n\n\n\n\nAinsi, si on transmet seulement le fichier default.html, par exemple par mail, le rendu n’incorpera pas les éléments de styles et les éventuelles images présents dans le répertoire.\n\n\n\n\n\nSolution\nAjouter l’option self-contained= true au yaml de la page\n\n---\ntitle: \"html: self-contained\"\n\nformat: \n  html: \n    self-contained: true\n---\nLe répertoire associé n’est plus généré lors du render, et tous les éléments qu’il comporte sont, comme sont nom l’indique, contenu dans la page html.\n\n\n\n\n\nRemarque: la taille du fichier html est bien évidemment plus élevée. Avec ce court exemple 938ko contre 22ko avec le répertoire associé."
  },
  {
    "objectID": "Autres/assist/posts/whispers/whisper.html",
    "href": "Autres/assist/posts/whispers/whisper.html",
    "title": "Vérifier l’installation de ffmpeg pour utiliser Whisper",
    "section": "",
    "text": "Tutoriel d’installation de whisper\nMessage d’erreur indiquant un problème d’installation de ffmpeg: FileNotFoundError: [WinError 2] Le fichier spécifié est introuvable\nVérifier la bonne installation de ffmpeg:\n\nouvrir l’invite de commande windows (taper cmd dans la barre de tâche)\ntaper ffmpeg dans la console\nSi le message renvoyé indique que ffmpeg n’est pas reconnu en tant que commande interne, soit l’encodeur n’est pas installé, soit il est installé mais le chemin d’accès n’a pas été ajouté aux variables d’environnement.\npour ajouter une variable d’environnement:\n\n\n\n\nVérifier de nouveau la bonne installation de ffmpeg (relancer l’invite de commande windows avant)\n\n\nimport whisper\n\n\nmodel = whisper.load_model(\"base\")\nresult = model.transcribe(\"C:/Users/thevenin_m/Desktop/mlk.mp3\",  verbose = True)\n\nC:\\Users\\thevenin_m\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\whisper\\transcribe.py:114: UserWarning:\n\nFP16 is not supported on CPU; using FP32 instead\n\n\n\nDetecting language using up to the first 30 seconds. Use `--language` to specify the language\nDetected language: English\n[00:00.000 --&gt; 00:10.880]  I have a dream that one day this nation will rise up, live out the true meaning of its\n[00:10.880 --&gt; 00:12.800]  creed.\n[00:12.800 --&gt; 00:17.960]  We hold these truths to be self-evident that all men are created equal.\n\n\n\n\n\n\n\n\nInstallation de ffmpeg à l’Ined\n\n\n\n\nEnvisager l’installation automatique de ffmpeg via applined\nIl est fort possible que vous deviez utiliser votre compte administrateur pour modifier les variables environnement\n\n\n\n\n\n\n\n\n\nComment installer ffmpeg manuellement\n\n\n\nPour éviter une installation qui nécessite un autre outil d’installation (scoop,…), la méthode traditionnelle qui consiste à télécharger une archive 7z (https://www.gyan.dev/ffmpeg/builds/), décompresser le sous répertoire bin dans le user du C, fonctionne toujours très bien. C’est ce chemin qu’il faudra ajouter aux variables d’environnement.\nPour ce genre d’outils, on peut créer dans son user un répertoire PATH_EXE et ici créer un sous répertoire ffmpeg dans lequel on mettra le bin."
  },
  {
    "objectID": "fiches30-06.html",
    "href": "fiches30-06.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "fiches30-06.html#tableau-des-fonctions-utilisées-dans-la-fiche",
    "href": "fiches30-06.html#tableau-des-fonctions-utilisées-dans-la-fiche",
    "title": "",
    "section": "Tableau des fonctions utilisées dans la fiche",
    "text": "Tableau des fonctions utilisées dans la fiche\nExemple de tableau des fonctions pour la fiche d’Elodie (on peut aller en mode visual sur un qmd vierge si on préfère). Le titre est en dessous du tableau=&gt; : **Fonctions utilisées dans la fiche**\n\nFonctions utilisées dans la fiche\n\n\nPackages\nFonctions\n\n\n\n\nquestionr\nwtd.table - cprop - lprop\n\n\nsurvey\nsvydesign - svytable - svymean - svyglm\n\n\nBase R\nmean"
  },
  {
    "objectID": "fiches30-06.html#extensions",
    "href": "fiches30-06.html#extensions",
    "title": "",
    "section": "Extensions",
    "text": "Extensions\nL’extension lightbox est très bien pour l’insersion d’image/graphique. En local pour l’activer, elle doit être installée (si une fiche dans un répertoire, l’installer à chaque fois): dans le terminal =&gt; quarto add quarto-ext/lightbox. Si vous utilisez une autre extension, me l’indiquer que je l’installe dans le répertoire du support."
  },
  {
    "objectID": "fiches30-06.html#lien-documentation",
    "href": "fiches30-06.html#lien-documentation",
    "title": "",
    "section": "Lien documentation",
    "text": "Lien documentation\nDe préférence, je préfèrerais qu’elle soit en début de document, sous le tableau des fonctions."
  },
  {
    "objectID": "R/assist/posts/coxzph/coxzph.html",
    "href": "R/assist/posts/coxzph/coxzph.html",
    "title": "Récupérer et exécuter le test OLS de Grambsch-Therneau",
    "section": "",
    "text": "Package\nFonctions\n\n\n\n\nsurvival\ncoxph - coxzph.old\n\n\n\nChamp d’application\n\nModèle de Cox (analyse des durées)\n\nDiagnostic sur l’hypothèse de proportionalité des risques\n\nProblématique\n\nDepuis le passage à la version 3 du package survival en 2020, le test OLS sur les résidus de Schoenfeld a été supprimé et remplacé par le test GLS. Le second est la version originelle du test proposé en 1994 par P.Grambsch et T.Therneau.\nEn présence d’évènements simultanés (durée discrète), les résultats affichés par les deux versions peuvent fortement variés.\nLorsqu’on utilise le modèle de Cox avec des durées discrètes, situation très courante dans les sciences sociales, je préconise l’utilisation de la version dite simplifiée (OLS).\n\nLe modèle de Cox est une méthode à durée continue, les conditions de validité du test GLS ne sont établies avec des évènements mesurés simultanément.\nContrainte de reproductibilité: Stata, Sas, Python (lifelines, statsmodels)\n\n\nRécupération et exécution du test OLS\n\nJ’ai récupéré le script de la fonction dans les archives du CRAN. Elle a simplement été renommée cox.zphold().\nPour charger la fonction, il suffit d’appliquer source() qui joue le même rôle que library().\n\nDirectement sur le dépôt github:\n\nsource(\"https://raw.githubusercontent.com/mthevenin/analyse_duree/main/cox.zphold/cox.zphold.R\")\n\nSi le script a été enregistré en local:\n\nsource(\"local_path/cox.zphold.R\")\n\n\n\nExemple\n\n\n\nRécupération des données\n\nlibrary(readr)\ntrans &lt;- read.csv(\"https://raw.githubusercontent.com/mthevenin/analyse_duree/master/bases/transplantation.csv\")\n\n\n\n\n\nEstimation d'un modèle de Cox\n\nlibrary(survival)\ncoxfit = coxph(formula = Surv(stime, died) ~ year + age + surgery, data = trans)\n\n\n\n\n\nRéupération et exécution du test OLS\n\nsource(\"https://raw.githubusercontent.com/mthevenin/analyse_duree/main/cox.zphold/cox.zphold.R\")\ncox.zphold(coxfit)\n\n\n          rho chisq      p\nyear    0.159  1.96 0.1620\nage     0.109  1.15 0.2845\nsurgery 0.251  3.96 0.0465\nGLOBAL     NA  7.99 0.0462"
  },
  {
    "objectID": "R/assist/posts/function_table_auto/fonction_table_auto.html",
    "href": "R/assist/posts/function_table_auto/fonction_table_auto.html",
    "title": "Fonction pour des tables automatiques",
    "section": "",
    "text": "Il existe un large éventail de package R consacré à la gestion et la mise en forme de table et de tris croisés (GT, flextable, …). S’ils sont souvent de grandes qualités, leur coût d’entrée peut être un peu élevé pour les utilisateurs.rices occasionnelles de R.\nPour répondre aux besoins de ces derniers, vous trouverez ici une fonction qui permet de facilement compiler des tris à plats ou bivariées, pour explorer automatiquement un grand nombre de variables, utiliser une pondération et les exporter dans un document Excel.\nPour une introduction aux tables et à la pondération, voir la fiche\n\n\nPour illustrer la mise en oeuvre de la fonction, on utilise les données d’exemples hdv2003 du packages questionr. Ces données possèdent à la fois des variables sur des carastéristiques socio-démographiques, des pratiques et des goûts, et propose une variable de pondération : poids.\n\n\n\nImportation des données d'exemples\n\nlibrary(questionr)\ndata(\"hdv2003\")\n\n\n\n\n\n\n\n\nid\nage\nsexe\nnivetud\npoids\noccup\n\n\n\n\n1\n28\nFemme\nEnseignement superieur y compris technique superieur\n2634.398\nExerce une profession\n\n\n2\n23\nFemme\nNA\n9738.396\nEtudiant, eleve\n\n\n3\n59\nHomme\nDerniere annee d'etudes primaires\n3994.102\nExerce une profession\n\n\n4\n34\nHomme\nEnseignement superieur y compris technique superieur\n5731.662\nExerce une profession\n\n\n5\n71\nFemme\nDerniere annee d'etudes primaires\n4329.094\nRetraite\n\n\n6\n35\nFemme\nEnseignement technique ou professionnel court\n8674.699\nExerce une profession\n\n\n\n\n\n\n\n\n\n\n\nObtenir une table automatique avec les tris à plat d’un grand nombre de variables\nCroiser ces variables avec une variable choisie, par exemple le sexe ou la qualification et obtenir :\n\nLes effectifs\nLes pourcentages lignes\nLes poucentages colonnes\nAjout d’un test du chi²\n\nUtiliser des pondérations\nGarder ou non les valeurs manquantes\nExporter le tableau obtenu (Par exemple : image ci-dessous)"
  },
  {
    "objectID": "R/assist/posts/function_table_auto/fonction_table_auto.html#données-dexemples",
    "href": "R/assist/posts/function_table_auto/fonction_table_auto.html#données-dexemples",
    "title": "Fonction pour des tables automatiques",
    "section": "",
    "text": "Pour illustrer la mise en oeuvre de la fonction, on utilise les données d’exemples hdv2003 du packages questionr. Ces données possèdent à la fois des variables sur des carastéristiques socio-démographiques, des pratiques et des goûts, et propose une variable de pondération : poids.\n\n\n\nImportation des données d'exemples\n\nlibrary(questionr)\ndata(\"hdv2003\")\n\n\n\n\n\n\n\n\nid\nage\nsexe\nnivetud\npoids\noccup\n\n\n\n\n1\n28\nFemme\nEnseignement superieur y compris technique superieur\n2634.398\nExerce une profession\n\n\n2\n23\nFemme\nNA\n9738.396\nEtudiant, eleve\n\n\n3\n59\nHomme\nDerniere annee d'etudes primaires\n3994.102\nExerce une profession\n\n\n4\n34\nHomme\nEnseignement superieur y compris technique superieur\n5731.662\nExerce une profession\n\n\n5\n71\nFemme\nDerniere annee d'etudes primaires\n4329.094\nRetraite\n\n\n6\n35\nFemme\nEnseignement technique ou professionnel court\n8674.699\nExerce une profession"
  },
  {
    "objectID": "R/assist/posts/function_table_auto/fonction_table_auto.html#objectifs",
    "href": "R/assist/posts/function_table_auto/fonction_table_auto.html#objectifs",
    "title": "Fonction pour des tables automatiques",
    "section": "",
    "text": "Obtenir une table automatique avec les tris à plat d’un grand nombre de variables\nCroiser ces variables avec une variable choisie, par exemple le sexe ou la qualification et obtenir :\n\nLes effectifs\nLes pourcentages lignes\nLes poucentages colonnes\nAjout d’un test du chi²\n\nUtiliser des pondérations\nGarder ou non les valeurs manquantes\nExporter le tableau obtenu (Par exemple : image ci-dessous)"
  },
  {
    "objectID": "R/assist/posts/function_table_auto/fonction_table_auto.html#fonctionnement",
    "href": "R/assist/posts/function_table_auto/fonction_table_auto.html#fonctionnement",
    "title": "Fonction pour des tables automatiques",
    "section": "Fonctionnement",
    "text": "Fonctionnement\nOn utilise la fonction table_auto() qui ne fait partie d’aucun package, il faut donc la charger dans un premier temps dans R. Une fois la fonction chargée, il suffira de la lancer en renseignant les variables, et les options voulues (présence de valeurs manquantes, pondérations, exportation)"
  },
  {
    "objectID": "R/assist/posts/function_table_auto/fonction_table_auto.html#paramètre-de-la-fonction",
    "href": "R/assist/posts/function_table_auto/fonction_table_auto.html#paramètre-de-la-fonction",
    "title": "Fonction pour des tables automatiques",
    "section": "Paramètre de la fonction",
    "text": "Paramètre de la fonction\n\n\n\n\n\n\n\nParamètre\nArgument\n\n\n\n\ndonnees\nUne base de données\n\n\nvars\nUn vecteur avec les différentes variables en lignes\n\n\nvar_crois\n\nSi vide : Tris à plat\nSi une variable : Tris croisés\n\n\n\ntable_type\n\nEffectifs : “eff”\nPourcentage ligne : “pct_ligne”\nPourcentage colonne : “pct_col”\n\n\n\nponder\nUne variable de pondération dans donnee\n\n\nval.manq\n“oui” ou “non”, garder ou non les valeurs manquantes\n\n\narrondi\nNombre de chiffre après la virgule\n\n\nsautdeligne\n“oui” ou “non”, insérer une ligne vide entre chaque variable\n\n\nexport_XLS\n“oui” ou “non”, si oui : création d’un fichier excel."
  },
  {
    "objectID": "R/assist/posts/function_table_auto/fonction_table_auto.html#import-de-la-fonction-table_auto",
    "href": "R/assist/posts/function_table_auto/fonction_table_auto.html#import-de-la-fonction-table_auto",
    "title": "Fonction pour des tables automatiques",
    "section": "Import de la fonction table_auto()",
    "text": "Import de la fonction table_auto()\nPour l’instant la fonction ne se trouve pas dans un package, il faut donc la charger dans l’environnement global de R depuis GitHub en utilisant le code suivant.\n\n\n\nChargement de la fonction depuis Github\n\nsource(\"https://raw.githubusercontent.com/arnomuller/table_auto/main/fonction_table_auto.R\")\n\n\n\n\n\n\n\nLe code de la fonction est disponible ici, si vous souhaitez lui apparter des modifications pour l’adapter à vos besoins."
  },
  {
    "objectID": "R/assist/posts/function_table_auto/fonction_table_auto.html#choix-des-variables",
    "href": "R/assist/posts/function_table_auto/fonction_table_auto.html#choix-des-variables",
    "title": "Fonction pour des tables automatiques",
    "section": "Choix des variables",
    "text": "Choix des variables\nOn définit les variables à croiser :\n\n\n\nChoix des variables\n\nvars      &lt;- c(\"relig\",\"trav.imp\",\"trav.satisf\",\"hard.rock\",\n               \"lecture.bd\",\"peche.chasse\",\"cuisine\",\n               \"bricol\",\"cinema\",\"sport\")\n\n\nOn peut également définir ici la variable de poids et celle à croiser, ou le faire directement dans la fonction.\n\n# On croise avec la variable sexe\nvar_crois &lt;- \"sexe\"\n# Si pas de croisement écrire NULL\nvar_crois &lt;- NULL\n\n# Variable de pondération\nponder    &lt;- \"poids\"\n# Si pas de pondération :\nponder    &lt;- NULL"
  },
  {
    "objectID": "R/assist/posts/function_table_auto/fonction_table_auto.html#création-du-tableau-empilé",
    "href": "R/assist/posts/function_table_auto/fonction_table_auto.html#création-du-tableau-empilé",
    "title": "Fonction pour des tables automatiques",
    "section": "Création du tableau empilé",
    "text": "Création du tableau empilé\nEn lançant le code suivant, on crée le data.frame tabdesc.\n\n\n\nActivation de la fonction\n\ntable_auto(hdv2003,              # Base de données\n           vars,                 # Un vecteur avec les noms des variables\n           var_crois   = \"sexe\", # Variable à croiser, si NULL : tri à plat\n           table_type  = \"eff\",  # Type de table : \"eff\", \"pct_lign\", \"pct_col\"\n           ponder      = NULL,   # Variable de ponder. , si NULL: pas de poids\n           val.manq    = \"non\",  # Si \"oui\" avec valeurs manquantes\n           arrondi     = 4,      # Nb de chiffres après la virgule\n           sautdeligne = \"oui\",  # Sauter des lignes entre les variables\n           export_XLS  = \"non\")  # Si \"oui\" créer un excel : tableau_empilee\n\n\n\n\n\n\n\n\nVar\nLevels\nENSEMBLE\nHomme\nFemme\npvalue\nddl\n\n\n\n\n\nENSEMBLE\n2000\n899\n1101\nNA\nNA\n\n\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nrelig\nPratiquant regulier\n266\n86\n180\n0,0000\n5\n\n\nrelig\nPratiquant occasionnel\n442\n170\n272\n0,0000\n5\n\n\nrelig\nAppartenance sans pratique\n760\n365\n395\n0,0000\n5\n\n\nrelig\nNi croyance ni appartenance\n399\n210\n189\n0,0000\n5\n\n\nrelig\nRejet\n93\n52\n41\n0,0000\n5\n\n\nrelig\nNSP ou NVPR\n40\n16\n24\n0,0000\n5\n\n\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\ntrav.imp\nLe plus important\n29\n13\n16\n0.0001\n3"
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "",
    "text": "Fonctions utilisées dans la fiche\n\n\nPackages\nFonctions\n\n\n\n\ndplyr\nif_else - case_when - mutate\n\n\nBase R\nifelse table"
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#procons",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#procons",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "Pro/Cons :",
    "text": "Pro/Cons :\nAvantage :\n- Pas besoin de packages supplémentaires\nInconvénient :\n\nLent\nProblème de persistence des types de modalités (surtout avec les labels et les factors)1\n\n\nCode moins lisible\nGestion des conditions multiples illisibles"
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#exemple-1-variables-dichotomiques",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#exemple-1-variables-dichotomiques",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "Exemple 1 : Variables dichotomiques",
    "text": "Exemple 1 : Variables dichotomiques\nCréation d’une variable catégorielle taille_rec, avec deux modalités : “Grand.e”, “Petit.e”.\n\n\n\n\n\n\n# Sélection d'une seed pour obtenir le même échantillon \n# dans la création des données fictive aléatoires\nset.seed(1)\n\n# Création du jeu de données exemple\nindividus &lt;- data.frame(\n  id = 1:20,\n  # Âges aléatoires entre 18 et 65 ans\n  age = sample(18:65, 20, replace = TRUE), \n  # Tailles aléatoires entre 150 et 200 cm\n  taille = sample(150:200, 20, replace = TRUE), \n  # Sexe aléatoire (Homme ou Femme)\n  sexe = sample(c(\"Homme\", \"Femme\"), 20, replace = TRUE) \n)\n\n\n# Ajout d'une variable taill_rec pour illustrer l'utilisation de ifelse()\nindividus$taille_rec &lt;- ifelse(individus$taille &gt; 175, # Condition \n                               \"Grand.e\",              # Catégorie si VRAI \n                               \"Petit.e\")              # Catégorie si FAUX\n\n\n# Affichage de la nouvelle variable\ntable(individus$taille_rec)\n\n\nGrand.e Petit.e \n     12       8"
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#exemple-2-variables-avec-plus-de-2-modalités",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#exemple-2-variables-avec-plus-de-2-modalités",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "Exemple 2 : Variables avec plus de 2 modalités",
    "text": "Exemple 2 : Variables avec plus de 2 modalités\nIl est possible d’empiler les fonctions ifelse() pour créer des variables avec plus de deux modalités. Pour cela on suit le schéma suivant :\n\n\n\n\n\nDans cet exemple, on divise la taille en 3 catégories :\n\nPetit.e : &lt; 165\n\nMoyen.ne : De 165 à 185\n\nGrand.e : &gt; 185\n\n\nindividus$taille_rec2 &lt;- ifelse(individus$taille &gt; 185,      # Condition 1\n                               \"Grand.e\",                    # Condi 1 Vrai \n                               ifelse(individus$taille &lt; 165,# Condition 2\n                                      \"Petit.e\",             # Condi 2 Vrai\n                                      \"Moyen.ne\"))           # Condi 1&2 Fausse\n                               \n\n\n# Affichage de la nouvelle variable\ntable(individus$taille_rec2)\n\n\n Grand.e Moyen.ne  Petit.e \n       8        9        3"
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#exemple-3-conditions-issues-de-deux-variables-initiales",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#exemple-3-conditions-issues-de-deux-variables-initiales",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "Exemple 3 : Conditions issues de deux variables initiales",
    "text": "Exemple 3 : Conditions issues de deux variables initiales\nIl est également possible de créer des variables à partir de conditions provenant de plusieurs variables.\nDans cet exemple, nous allons créer une variable dont les catégories seront différentes selon pour les hommes et les femmes :\n\n\n\nPour les hommes :\n\nPetit.e : &lt; 180\n\nGrand.e : &gt;= 180\n\nPour les femmes :\n\nPetit.e : &lt; 170\n\nGrand.e : &gt;= 170\n\n\n\n\n\n\n\n\n\n\n\nindividus$taille_rec3 &lt;- ifelse(individus$sexe == \"Homme\" & \n                                  individus$taille &lt; 180,      # Condition 1\n                                # Condition 1 Vraie :\n                                \"Petit.e\",    \n                                # Sinon :\n                                ifelse(individus$sexe == \"Femme\" & \n                                  individus$taille &lt; 170,      # Condition 2\n                                  # Condition 2 Vraie :\n                                  \"Petit.e\",  \n                                  # Tous les autres :\n                                  \"Grand.e\"))          \n                               \n\n\n# Affichage de la nouvelle variable\ntable(individus$taille_rec3)\n\n\nGrand.e Petit.e \n     14       6"
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#procons-1",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#procons-1",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "Pro/Cons :",
    "text": "Pro/Cons :\nAvantage :\nLe package dplyr, présent dans le tidyverse, propose sa propre version de la fonction ifelse(), qui permet d’éviter certains problèmes rencontrer avec la version de base.\nAinsi, if_else() s’utilise exactement de la même manière que ifelse, elle est plus rapide et permet de conserver le type de la variable initiale.\nInconvénient :\n\nBesoin d’installer un package\nGestion des conditions multiples toujours illisibles"
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#exemple-4-if_else",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#exemple-4-if_else",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "Exemple 4 : if_else()",
    "text": "Exemple 4 : if_else()\n\n#install.packages(\"dplyr\")\nlibrary(dplyr)\n\nindividus$taille_rec4 &lt;- if_else(individus$sexe == \"Homme\" & \n                                  individus$taille &lt; 180,      # Condition 1\n                                # Condition 1 Vraie :\n                                \"Petit.e\",    \n                                # Sinon :\n                                if_else(individus$sexe == \"Femme\" & \n                                  individus$taille &lt; 170,      # Condition 2\n                                  # Condition 2 Vraie :\n                                  \"Petit.e\",  \n                                  # Tous les autres :\n                                  \"Grand.e\"))          \n                               \n\n\n# Affichage de la nouvelle variable\ntable(individus$taille_rec4)\n\n\nGrand.e Petit.e \n     14       6 \n\n\nOn obtient bien le même résultat"
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#procons-2",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#procons-2",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "Pro/Cons :",
    "text": "Pro/Cons :\nLa gestion des conditions multiples pouvant être fastidieuse avec les fonctions ifelse(), le code devenant rapidemment illisible, dplyr propose la fonction case_when() qui permet de l’organiser mieux.\nSon fonctionnement se base sur des formules, il peut alors sembler plus ou moins compréhensibles selon les sensibilités de programmations."
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#ordre-daffectation-des-valeurs",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#ordre-daffectation-des-valeurs",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "Ordre d’affectation des valeurs",
    "text": "Ordre d’affectation des valeurs\nAvec ifelse() ou avec case_when, une fois la première condition remplie, la nouvelle valeur ne peux plus être modifiée, ainsi si une condition future se superpose, elle ne sera pas prise en compte dans le recodage. On va du plus spécifique au plus général\nExemple : On crée une variable taille avec comme modalité :\n\nPetit : &lt; 170\n\nMoyen : 170 à 185\n\nGrand : &gt; 185\n\n\nindividus &lt;- individus %&gt;%\n  select(id, taille) %&gt;% \n  \n  mutate(\n    # avec ifelse\n    var1 = ifelse(taille &gt; 170, \"Moyen\", \n                  ifelse(taille &gt; 185, \"Grand\", \"Petit\")),\n    \n    # avec if_else\n    var2 = if_else(taille &gt; 170, \"Moyen\", \n                   if_else(taille &gt; 185, \"Grand\", \"Petit\")),\n    \n    # avec case_when\n    var3 = case_when(\n      taille &gt; 170 ~ \"Moyen\",\n      taille &gt; 185 ~ \"Grand\", \n      TRUE ~ \"Petit\")) \n\ntable(individus$var1)\n\n\nMoyen Petit \n   14     6 \n\ntable(individus$var2)\n\n\nMoyen Petit \n   14     6 \n\ntable(individus$var3)\n\n\nMoyen Petit \n   14     6 \n\n\nOn voit qu’il n’y a pas la catégorie “Grand”, comme la valeur a déjà été affectée à la catégorie “Moyen”. Il faudrait alors :\n\nindividus &lt;- individus %&gt;%\n  mutate(var5 = case_when(\n    taille &gt; 185 ~ \"Grand\", \n    taille &gt; 170 ~ \"Moyen\",\n    TRUE ~ \"Petit\")) \n\ntable(individus$var5)\n\n\nGrand Moyen Petit \n    8     6     6"
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#a-propos-des-valeurs-manquantes",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#a-propos-des-valeurs-manquantes",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "A propos des valeurs manquantes",
    "text": "A propos des valeurs manquantes\nLes fonctions ifelse() n’ont pas le même comportement pour le traitement des valeurs manquantes que la fonction case_when.\nDans le cas des fonctions ifelse, si l’une des variables de conditions est un NA, le résultat sera également une valeur manquante dans la variable crée.\nDans le cas de la fonction case_when, l’individu avec une valeur manquante aura comme nouvelle valeur la catégorie défini dans la partie “SINON”.2\nExemple :\nOn crée un data frame avec des NA :\n\nlibrary(dplyr)\ndf &lt;- data.frame(a = c(1:3, NA, 4,NA,6:7), b = c(NA, letters[1:7]))\ndf\n\n   a    b\n1  1 &lt;NA&gt;\n2  2    a\n3  3    b\n4 NA    c\n5  4    d\n6 NA    e\n7  6    f\n8  7    g\n\n\nOn fait un recodage avec ifelse()\n\ndf %&gt;%\n  mutate(res = if_else(a &gt; 3, \"Yes\", \n                   if_else(b == \"c\", \"No\", \n                           if_else(a &gt; 5, \"Maybe\", \"Done\"))))\n\n   a    b  res\n1  1 &lt;NA&gt; &lt;NA&gt;\n2  2    a Done\n3  3    b Done\n4 NA    c &lt;NA&gt;\n5  4    d  Yes\n6 NA    e &lt;NA&gt;\n7  6    f  Yes\n8  7    g  Yes\n\n\nLes NA restent des NAs, alors qu’avec case_when :\n\ndf %&gt;%\n   mutate(res = case_when(a &gt; 3 ~ \"Yes\", \n                          b == \"c\"~\"No\", \n                          a &gt; 5 ~ \"Maybe\", \n                          TRUE ~ \"Done\"))\n\n   a    b  res\n1  1 &lt;NA&gt; Done\n2  2    a Done\n3  3    b Done\n4 NA    c   No\n5  4    d  Yes\n6 NA    e Done\n7  6    f  Yes\n8  7    g  Yes\n\n\nOn a pas de NA, ils ont été recodé avec la catégorie SINON.\nIl faut donc créer une condition avec is.na(variable)\n\ndf %&gt;%\n   mutate(res = case_when(a &gt; 3 ~ \"Yes\", \n                          b == \"c\"~\"No\", \n                          a &gt; 5 ~ \"Maybe\", \n                          is.na(a) | is.na(b) ~ NA,\n                          TRUE ~ \"Done\"))\n\n   a    b  res\n1  1 &lt;NA&gt; &lt;NA&gt;\n2  2    a Done\n3  3    b Done\n4 NA    c   No\n5  4    d  Yes\n6 NA    e &lt;NA&gt;\n7  6    f  Yes\n8  7    g  Yes"
  },
  {
    "objectID": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#footnotes",
    "href": "R/assist/posts/ifelse_casewhen/ifelse_casewhen.html#footnotes",
    "title": "Recoder des variables avec ifelse() - if_else - case_when()",
    "section": "Notes de bas de page",
    "text": "Notes de bas de page\n\n\nhttps://community.rstudio.com/t/case-when-why-not/2685/3↩︎\nhttps://stackoverflow.com/questions/57807976/how-to-use-case-when-rather-then-if-else-error-in-my-code↩︎"
  },
  {
    "objectID": "R/assist/posts/jtools_output/jtools_output.html",
    "href": "R/assist/posts/jtools_output/jtools_output.html",
    "title": "Afficher des outputs de régression avec Jtools",
    "section": "",
    "text": "Packages\nFonctions\n\n\n\n\njtools\nsumm\n\n\nsurvey\nsvydesign svyglm\n\n\nBase R\nlm glm"
  },
  {
    "objectID": "R/assist/posts/jtools_output/jtools_output.html#avec-la-fonction-lm",
    "href": "R/assist/posts/jtools_output/jtools_output.html#avec-la-fonction-lm",
    "title": "Afficher des outputs de régression avec Jtools",
    "section": "Avec la fonction lm()",
    "text": "Avec la fonction lm()\nListe des options\n\nlibrary(jtools)\nlibrary(readr)\n\ndf =  read.csv(\"https://raw.githubusercontent.com/mthevenin/intro_logit/main/hypertension2.csv\")\n\nfit = lm(bpsystol ~ age + I(sex) + I(black) + I(region), data=df)\n\n1summ(fit, digits=4)\n\n\n1\n\ndigits=4 =&gt; Les résultats sont reportés avec 4 décimales\n\n\n\n\n\n\n\n\nObservations\n10351\n\n\nDependent variable\nbpsystol\n\n\nType\nOLS linear regression\n\n\n\n\n\n\n\n\nF(6,10344)\n552.2494\n\n\nR²\n0.2426\n\n\nAdj. R²\n0.2422\n\n\n\n\n\n\n\n\n\nEst.\nS.E.\nt val.\np\n\n\n\n\n(Intercept)\n102.2001\n0.8979\n113.8168\n0.0000\n\n\nage\n0.6563\n0.0116\n56.5104\n0.0000\n\n\nI(sex)Male\n4.0350\n0.3999\n10.0911\n0.0000\n\n\nI(black)Not Black\n-4.6494\n0.6640\n-7.0019\n0.0000\n\n\nI(region)NE\n0.2570\n0.5892\n0.4362\n0.6627\n\n\nI(region)S\n-0.7920\n0.5450\n-1.4532\n0.1462\n\n\nI(region)W\n-0.5221\n0.5543\n-0.9420\n0.3462\n\n\n\n Standard errors: OLS"
  },
  {
    "objectID": "R/assist/posts/jtools_output/jtools_output.html#avec-la-fonction-glm-lien-logit",
    "href": "R/assist/posts/jtools_output/jtools_output.html#avec-la-fonction-glm-lien-logit",
    "title": "Afficher des outputs de régression avec Jtools",
    "section": "Avec la fonction glm() [lien logit]",
    "text": "Avec la fonction glm() [lien logit]\nListe des options\n\nfit = glm(highbp ~ age + I(sex) + I(black) + I(region), family=binomial, data=df)   \n\n1summ(fit, digits=4, confint=TRUE, exp=TRUE)\n\n\n1\n\nOn ajoute des intervalles de confiance (confint=TRUE) et le report des estimateurs sous forme d’Odds Ratio (exp=TRUE)\n\n\n\n\n\n\n\n\nObservations\n10351\n\n\nDependent variable\nhighbp\n\n\nType\nGeneralized linear model\n\n\nFamily\nbinomial\n\n\nLink\nlogit\n\n\n\n\n\n\n\n\nχ²(6)\n1623.1601\n\n\nPseudo-R² (Cragg-Uhler)\n0.1951\n\n\nPseudo-R² (McFadden)\n0.1151\n\n\nAIC\n12492.3709\n\n\nBIC\n12543.0848\n\n\n\n\n\n\n\n\n\nexp(Est.)\n2.5%\n97.5%\nz val.\np\n\n\n\n\n(Intercept)\n0.0853\n0.0701\n0.1038\n-24.5720\n0.0000\n\n\nage\n1.0496\n1.0469\n1.0524\n36.1832\n0.0000\n\n\nI(sex)Male\n1.5483\n1.4223\n1.6856\n10.0890\n0.0000\n\n\nI(black)Not Black\n0.5860\n0.5092\n0.6742\n-7.4663\n0.0000\n\n\nI(region)NE\n1.1655\n1.0287\n1.3203\n2.4051\n0.0162\n\n\nI(region)S\n1.0024\n0.8930\n1.1253\n0.0414\n0.9669\n\n\nI(region)W\n1.0966\n0.9746\n1.2338\n1.5322\n0.1255\n\n\n\n Standard errors: MLE"
  },
  {
    "objectID": "R/assist/posts/jtools_output/jtools_output.html#avec-la-fonction-svyglm-lien-logit",
    "href": "R/assist/posts/jtools_output/jtools_output.html#avec-la-fonction-svyglm-lien-logit",
    "title": "Afficher des outputs de régression avec Jtools",
    "section": "Avec la fonction svyglm() [lien logit]",
    "text": "Avec la fonction svyglm() [lien logit]\nListe des options\n\nlibrary(survey)\n\nw = svydesign(id=~1, weights=~w, data=df)\n\nfit = svyglm(highbp ~ age + I(sex) + I(black) + I(region), family=binomial, design=w)\nsumm(fit, digits=4, confint=TRUE, exp=TRUE)    \n\n\n\n\n\nObservations\n10351\n\n\nDependent variable\nhighbp\n\n\nType\nSurvey-weighted generalized linear model\n\n\nFamily\nbinomial\n\n\nLink\nlogit\n\n\n\n\n\n\n\n\nPseudo-R² (Cragg-Uhler)\n0.1881\n\n\nPseudo-R² (McFadden)\n0.1125\n\n\nAIC\n12064.1922\n\n\n\n\n\n\n\n\n\nexp(Est.)\n2.5%\n97.5%\nt val.\np\n\n\n\n\n(Intercept)\n0.0692\n0.0553\n0.0865\n-23.3763\n0.0000\n\n\nage\n1.0530\n1.0497\n1.0562\n33.0767\n0.0000\n\n\nI(sex)Male\n1.8298\n1.6529\n2.0256\n11.6459\n0.0000\n\n\nI(black)Not Black\n0.5849\n0.4913\n0.6964\n-6.0259\n0.0000\n\n\nI(region)NE\n1.1822\n1.0245\n1.3642\n2.2906\n0.0220\n\n\nI(region)S\n0.9961\n0.8670\n1.1445\n-0.0549\n0.9562\n\n\nI(region)W\n1.1225\n0.9737\n1.2940\n1.5928\n0.1112\n\n\n\n Standard errors: Robust"
  },
  {
    "objectID": "R/assist/posts/jtools_output/jtools_output.html#footnotes",
    "href": "R/assist/posts/jtools_output/jtools_output.html#footnotes",
    "title": "Afficher des outputs de régression avec Jtools",
    "section": "Notes de bas de page",
    "text": "Notes de bas de page\n\n\nmesure de la tension artérielle (lm) et du risque d’hypertension (glm et svyglm)↩︎"
  },
  {
    "objectID": "R/assist/posts/R_jupyter/R_jupyter.html",
    "href": "R/assist/posts/R_jupyter/R_jupyter.html",
    "title": "Utiliser R avec le notebook Jupyter",
    "section": "",
    "text": "Astuce\n\n\n\nCliquer sur l’animation pour l’agrandir et la faire redémarrer au début"
  },
  {
    "objectID": "R/assist/posts/R_jupyter/R_jupyter.html#ined",
    "href": "R/assist/posts/R_jupyter/R_jupyter.html#ined",
    "title": "Utiliser R avec le notebook Jupyter",
    "section": "Ined",
    "text": "Ined\n\nA l’Ined, l’installation de Python et Jupyter est directement accessible via le bureau vial’outil Applined mis à disposition par le Service Informatique. Dans la fenêtre de recherche:\nPython puis l’installer.\nJupyter puis l’installer.\nOuverture de Jupyter dans le navigateur: taper cmd dans la barre de recherche windows, puis jupyter notebook.\n\nRésumé des étapes"
  },
  {
    "objectID": "R/assist/posts/R_jupyter/R_jupyter.html#hors-ined",
    "href": "R/assist/posts/R_jupyter/R_jupyter.html#hors-ined",
    "title": "Utiliser R avec le notebook Jupyter",
    "section": "Hors Ined",
    "text": "Hors Ined\n\nLa solution la plus simple est d’installer Anaconda, mais un nombre important d’applications seront installées. Je ne suis pas sur que, hors usage intensif de python, cela soit un quelconque intérêt.\nInstaller la version soft d’Anaconda, miniconda, puis installer Jupyter via l’invit de commandes conda: conda install jupyter ou via l’invite de commandes window avec l’application de gestion des librairie Python pip: pip install jupyter.\n\nL’ouverture de Jupyter se fera directement via un raccourci (conda) ou via l’invite de commande windows en tapant jupyter noteboook."
  },
  {
    "objectID": "R/assist/posts/spaghetti/spaghetti.html",
    "href": "R/assist/posts/spaghetti/spaghetti.html",
    "title": "Contrôler les effets spaghetti avec ggplot",
    "section": "",
    "text": "# pour récupérer la palette de couleur qualitatitive Tableau: \n# install.packages(ggthemes\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)"
  },
  {
    "objectID": "R/assist/posts/spaghetti/spaghetti.html#graphique-combiné-simple",
    "href": "R/assist/posts/spaghetti/spaghetti.html#graphique-combiné-simple",
    "title": "Contrôler les effets spaghetti avec ggplot",
    "section": "Graphique combiné simple",
    "text": "Graphique combiné simple\nPar rapport au graphique précédent on va simplement générer des sous graphiques par pays, qui seront combinés avec l’option facet_wrap.\n\nggplot(df) +\n  aes(x = year, y = y) +\n  geom_line(colour = \"#C24168\", lwd=1.2) +\n  labs(title = \"Taux de fécondité\") +\n  theme_minimal() +\n  labs(x = \"Années\", \n       y = \"Taux de fécondité\", \n       title = \"Taux de fécondité par pays de 1950 à 2022\", \n       caption = \"Source: GGP - Datalab Ined\",) +\n  scale_x_continuous(guide = guide_axis(n.dodge = 2), breaks=seq(1950,2020, 10)) + \n  scale_y_continuous(breaks=seq(0,6,1)) +\n  facet_wrap(vars(pays), ncol = 4L)"
  },
  {
    "objectID": "R/assist/posts/spaghetti/spaghetti.html#graphique-combiné-avec-highlighting",
    "href": "R/assist/posts/spaghetti/spaghetti.html#graphique-combiné-avec-highlighting",
    "title": "Contrôler les effets spaghetti avec ggplot",
    "section": "Graphique combiné avec highlighting",
    "text": "Graphique combiné avec highlighting\nOn peut combiné les deux approches, en gardant en arrière plan de chaque sous graphique les informations des autres graphiques. On peut donc ici, pour chaque pays, positionné l’information de chaque pays par rapport aux autres.\nLe principe du code a été récupéré dans le support de Yann Holtz consacré à ce problème Data to viz. On vous recommande très fortement d’utiliser ce support très riche, non seulement en éléments de programmation, mais également en conseils. En particulier la section mise en garde (caveats).\nLes courbes en arrière plan ont une épaisseur plus faible (lwd=0.1) et on une couleur unique ( color=\"grey ). Pour facilité la lecture, le quadrillage a été allégé dans l’option theme().\n\ntmp &lt;- df %&gt;%\n  mutate(pays2=pays)   \n\nggplot(tmp) +\n  aes(x = year, y = y) +\n  geom_line( data=tmp %&gt;% dplyr::select(-pays), aes(group=pays2), color=\"grey\", lwd=0.1) +    \n  geom_line(colour = \"#C24168\", lwd=1.4) +\n  labs(title = \"Taux de fécondité\") +\n  theme_minimal() +\n  theme(panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),  \n        panel.grid.minor.y = element_blank()) + \n  labs(x = \"Années\", \n       y = \"Taux de fécondité\", \n       title = \"Taux de fécondité par pays de 1950 à 2022\", \n       caption = \"Source: GGP - Datalab Ined\",) +\n  scale_x_continuous(guide = guide_axis(n.dodge = 2), breaks=seq(1950,2020, 10)) + \n  scale_y_continuous(breaks=seq(0,6,1)) +\n  facet_wrap(vars(pays), ncol = 4L)\n\n\n\n\n\n\n\n\nOn peut vouloir trier les sous graphiques selon un ordre particulier, ici ils sont simplement affichés par ordre alphabétique.\nSi on souhaite par exemple, affiché les sous graphiques par ordre décroissant du taux de fécondité en 2022, donc d’Israel en haut à gauche à la Corée du Sud en bas à droite, on doit réarranger l’ordre de la variable pays avec le code suivant:\n\npays_order &lt;- df %&gt;%\n  filter(year == 2022) %&gt;% \n  arrange(desc(y))\npays_order &lt;- as.character(pays_order[,\"pays\"])\npays_order\n\n [1] \"Israel\"            \"Turkey\"            \"Argentina\"        \n [4] \"France\"            \"Iceland\"           \"USA\"              \n [7] \"Germany\"           \"Portugal\"          \"Japan\"            \n[10] \"Italy\"             \"Taiwan\"            \"Republic of Korea\"\n\ntmp &lt;- df %&gt;%\n  mutate(pays2=pays)\ntmp$pays &lt;- factor(tmp$pays, levels = pays_order)\ntmp$pays2 &lt;- factor(tmp$pays2, levels = pays_order)\nunique(tmp$pays2)\n\n [1] France            Germany           Iceland           Israel           \n [5] Italy             Japan             Portugal          Turkey           \n [9] USA               Argentina         Taiwan            Republic of Korea\n12 Levels: Israel Turkey Argentina France Iceland USA Germany ... Republic of Korea\n\n\nEt on réexécute le graphique précédent\n\nggplot(tmp) +\n  aes(x = year, y = y) +\n  geom_line( data=tmp %&gt;% dplyr::select(-pays), aes(group=pays2), color=\"grey\", lwd=0.1) +    \n  geom_line(colour = \"#C24168\", lwd=1.4) +\n  labs(title = \"Taux de fécondité\") +\n  theme_minimal() +\n  theme(panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),  \n        panel.grid.minor.y = element_blank()) + \n  labs(x = \"Années\", \n       y = \"Taux de fécondité\", \n       title = \"Taux de fécondité par pays de 1950 à 2022\", \n       caption = \"Source: GGP - Datalab Ined\",) +\n  scale_x_continuous(guide = guide_axis(n.dodge = 2), breaks=seq(1950,2020, 10)) + \n  scale_y_continuous(breaks=seq(0,6,1)) +\n  facet_wrap(vars(pays), ncol = 4L)"
  },
  {
    "objectID": "R/assist/posts/spaghetti/spaghetti.html#une-fonction-pour-simplifier-et-automatiser-le-code",
    "href": "R/assist/posts/spaghetti/spaghetti.html#une-fonction-pour-simplifier-et-automatiser-le-code",
    "title": "Contrôler les effets spaghetti avec ggplot",
    "section": "Une fonction pour simplifier et automatiser le code",
    "text": "Une fonction pour simplifier et automatiser le code\n\nVersion 0.1 - Juillet 2023 [Arno Muller]\nDes options seront ajoutées ultérieurement (couleurs, épaisseurs, options thème(), ….).\n\nChargement de la fonction:\n\nsource(\"https://raw.githubusercontent.com/arnomuller/Fonction_R/main/spag_plot/spag_plot.R\")\n\nMaintenant on va trier les graphiques pas ordre décroissant du taux de fécondité en 1950\n\ndf &lt;- read.csv(\"D:/D/Marc/SMS/assistoolsms_marc/R/assist/posts/spaghetti/fecondite_ggp.csv\")\ndf = df %&gt;% mutate_if(is.character,as.factor)\n\nspag_plot(df,                  # Base de données au format long\n          var_x = \"year\",      # Variable en X (numérique)\n          var_y = \"y\",         # Variable en Y (numérique)\n          var_group= \"pays\",   # Variable de groupe (factor)\n          ordre =  1950,      # Ordre des plots (\"alpha\", valeur num de var_x, un vecteur)\n          decroiss = \"oui\",    # Ordre décroissant de l'ordre choisi au dessus\n          titre   = \"TITRE\",   # Choix du titre\n          titre_x = \"Années\",  # Choix du titre de l'axe X\n          titre_y   =\"Taux\",   # Choix du titre de l'axe Y\n          source    = \"\",      # Source des données\n          interval = 20,       # Echelle de X\n          n_col = 6)           # Nombre de colonnes pour les graphiques"
  }
]